{"entries":[{"timestamp":1742379271599,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"http"],[-1,"s"],[0,"://"],[-1,"developers.google.com/blockly/xml\"><variables></variables>"],[1,"www.w3.org/1999/xhtml\">\n  "],[0,"<blo"]],"start1":12,"start2":12,"length1":70,"length2":37},{"diffs":[[0,"art\""],[-1," x=\"20\" y=\"20\""],[0,"></b"]],"start1":67,"start2":67,"length1":22,"length2":8},{"diffs":[[0,"</block>"],[1,"\n  "],[0,"<block t"]],"start1":72,"start2":72,"length1":16,"length2":19},{"diffs":[[0,"ver\""],[-1," x=\"225\" y=\"20\""],[0,"></b"]],"start1":107,"start2":107,"length1":23,"length2":8},{"diffs":[[0,"</block>"],[1,"\n"],[0,"</xml>"]],"start1":112,"start2":112,"length1":14,"length2":15}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,".md\""],[-1,",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"pyprj\""],[1,"\n    ],\n    \"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":234,"start2":234,"length1":64,"length2":44}]},{"type":"added","filename":"main.py","value":"from microbit import *\n\n# Define motor control pins\nLEFT_WHEEL = pin0\nRIGHT_WHEEL = pin1\n\n# Define ultrasonic sensor pins\nTRIG = pin13\nECHO = pin14\n\n# Function to control motors (servo values: 0-180 degrees)\ndef move(left_angle, right_angle):\n    LEFT_WHEEL.write_analog(left_angle)   # Left wheel movement\n    RIGHT_WHEEL.write_analog(right_angle) # Right wheel movement\n\n# Function to measure distance from ultrasonic sensor\ndef get_distance():\n    TRIG.write_digital(0)\n    sleep(2)  # Short delay\n    TRIG.write_digital(1)\n    sleep(10)\n    TRIG.write_digital(0)\n\n    while ECHO.read_digital() == 0:\n        start_time = running_time()  # Get start time\n\n    while ECHO.read_digital() == 1:\n        end_time = running_time()  # Get end time\n\n    duration = end_time - start_time\n    distance = (duration / 2) * 0.0343  # Convert time to distance (cm)\n    \n    if distance < 2 or distance > 400:\n        return 100  # Default value if out of range\n\n    return distance\n\n# Main loop\nwhile True:\n    distance = get_distance()\n\n    if distance < 10:  # If obstacle is detected\n        move(90, 90)  # Move backward\n        sleep(500)\n        \n        move(90, 30)  # Turn right\n        sleep(500)\n\n    else:\n        move(0, 90)  # Move forward\n\n    sleep(100)\n"}]},{"timestamp":1742379704753,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0," x=\""],[1,"2"],[0,"0\" y=\""],[1,"2"],[0,"0\"><"]],"start1":104,"start2":104,"length1":14,"length2":16},{"diffs":[[0,"x=\"2"],[-1,"0"],[1,"2"],[0,"5\" y=\""],[1,"2"],[0,"0\"><"]],"start1":156,"start2":156,"length1":15,"length2":16}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," \"*\""],[-1,",\n        \"servo\": \"*\",\n        \"MakerBit-Ultrasonic\": \"github:1010technologies/pxt-makerbit-ultrasonic#v1.0.8\""],[0,"\n   "]],"start1":150,"start2":150,"length1":119,"length2":8}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"t *\n"],[-1,"import utime\n\n# Define pins for motor"],[1,"\n# Define motor control pin"],[0,"s\nLE"]],"start1":19,"start2":19,"length1":45,"length2":35},{"diffs":[[0,"ine "],[-1,"pins for "],[0,"ultr"]],"start1":95,"start2":95,"length1":17,"length2":8},{"diffs":[[0,"nsor"],[-1,"\nmakerbit.connect_ultrasonic_distance_sensor(DigitalPin.P5, DigitalPin.P8)"],[1," pins"],[0,"\nTRI"]],"start1":112,"start2":112,"length1":82,"length2":13},{"diffs":[[0,"IG = pin"],[-1,"2"],[1,"13"],[0,"\nECHO = "]],"start1":124,"start2":124,"length1":17,"length2":18},{"diffs":[[0,"HO = pin"],[-1,"3"],[1,"14"],[0,"\n\n# Func"]],"start1":137,"start2":137,"length1":17,"length2":18},{"diffs":[[0,"rol "],[-1,"the wheels"],[1,"motors (servo values: 0-180 degrees)"],[0,"\ndef"]],"start1":167,"start2":167,"length1":18,"length2":44},{"diffs":[[0,"eft_"],[-1,"speed"],[1,"angle"],[0,", right_"],[-1,"speed"],[1,"angle"],[0,"):\n "]],"start1":218,"start2":218,"length1":26,"length2":26},{"diffs":[[0,"og(left_"],[-1,"speed)"],[1,"angle)   # Left wheel movement"],[0,"\n    RIG"]],"start1":268,"start2":268,"length1":22,"length2":46},{"diffs":[[0,"ght_"],[-1,"speed)"],[1,"angle) # Right wheel movement"],[0,"\n\n# "]],"start1":338,"start2":338,"length1":14,"length2":37},{"diffs":[[0,"nce "],[-1,"using the"],[1,"from"],[0," ult"]],"start1":400,"start2":400,"length1":17,"length2":12},{"diffs":[[0,"    "],[-1,"utime.sleep_us(2)"],[1,"sleep(2)  # Short delay"],[0,"\n   "]],"start1":473,"start2":473,"length1":25,"length2":31},{"diffs":[[0,"    "],[-1,"utime."],[0,"sleep"],[-1,"_us"],[0,"(10)"]],"start1":527,"start2":527,"length1":22,"length2":13},{"diffs":[[0,"_time = "],[-1,"utime.ticks_us()"],[1,"running_time()  # Get start time"],[0,"\n\n    wh"]],"start1":617,"start2":617,"length1":32,"length2":48},{"diffs":[[0,"e = "],[-1,"utime.ticks_us()"],[1,"running_time()  # Get end time"],[0,"\n\n  "]],"start1":710,"start2":710,"length1":24,"length2":38},{"diffs":[[0,"rt t"],[-1,"o cm\n"],[1,"ime to distance (cm)\n    "],[0,"\n   "]],"start1":830,"start2":830,"length1":13,"length2":33},{"diffs":[[0,"  # "],[-1,"Return a d"],[1,"D"],[0,"efau"]],"start1":917,"start2":917,"length1":18,"length2":9},{"diffs":[[0," If "],[-1,"an "],[0,"obst"]],"start1":1052,"start2":1052,"length1":11,"length2":8},{"diffs":[[0,"ove("],[1,"9"],[0,"0, "],[1,"9"],[0,"0)  # "],[-1,"Stop"],[1,"Move backward"],[0,"\n   "]],"start1":1086,"start2":1086,"length1":21,"length2":32},{"diffs":[[0,"        "],[-1,"utime."],[0,"sleep"],[-1,"_ms"],[0,"(500)\n"],[1,"        "],[0,"\n       "]],"start1":1115,"start2":1115,"length1":36,"length2":35},{"diffs":[[0,"   move("],[-1,"50"],[1,"9"],[0,"0, "],[1,"3"],[0,"0)  # Tu"]],"start1":1148,"start2":1148,"length1":21,"length2":21},{"diffs":[[0,"        "],[-1,"utime."],[0,"sleep"],[-1,"_ms"],[0,"(500)\n\n "]],"start1":1178,"start2":1178,"length1":30,"length2":21},{"diffs":[[0,"ove("],[-1,"50"],[0,"0, "],[-1,"50"],[1,"9"],[0,"0)  "]],"start1":1217,"start2":1217,"length1":15,"length2":12},{"diffs":[[0,"    "],[-1,"utime."],[0,"sleep"],[-1,"_ms"],[0,"(100"]],"start1":1245,"start2":1245,"length1":22,"length2":13}]}]},{"timestamp":1742380289872,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"0.8\""],[-1,",\n        \"pxt-sonar\": \"github:microsoft/pxt-sonar#v0.0.6\""],[0,"\n   "]],"start1":261,"start2":261,"length1":66,"length2":8}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"ort "],[-1,"sonar  # Assuming you have a sonar library for the ultrasonic sensor\n\n# Initialize servo pins\nleft_servo = pin1\nright_servo"],[1,"utime\n\n# Define pins for motors\nLEFT_WHEEL = pin0\nRIGHT_WHEEL = pin1\n\n# Define pins for ultrasonic sensor\nmakerbit.connect_ultrasonic_distance_sensor(DigitalPin.P5, DigitalPin.P8)\nTRIG = pin2\nECHO"],[0," = pin"],[-1,"2"],[1,"3"],[0,"\n\n# "]],"start1":26,"start2":26,"length1":138,"length2":211},{"diffs":[[0," to "],[-1,"move the car forward\ndef move_forward():\n    left_servo.write_analog(180)  # Left servo forward\n    right_servo.write_analog(0)   # Right servo forward\n\n# Function to move the car backward\ndef move_backward():\n    left_servo.write_analog(0)    # Left servo backward\n    right_servo.write_analog(180) # Right servo backward\n\n# Function to turn the car to the right\ndef turn_right():\n    left_servo.write_analog(180)  # Left servo forward\n    right_servo.write_analog(180) # Right servo backward\n\n# Function to stop the car\ndef stop_car():"],[1,"control the wheels\ndef move(left_speed, right_speed):\n    LEFT_WHEEL.write_analog(left_speed)\n    RIGHT_WHEEL.write_analog(right_speed)\n\n# Function to measure distance using the ultrasonic sensor\ndef get_distance():\n    TRIG.write_digital(0)\n    utime.sleep_us(2)\n    TRIG.write_digital(1)\n    utime.sleep_us(10)\n    TRIG.write_digital(0)\n\n    while ECHO.read_digital() == 0:\n        start_time = utime.ticks_us()\n"],[0,"\n    "],[-1,"left_servo.write_analog(90)   # Neutral position\n    right_servo.write_analog(90)  # Neutral position\n\n# Main loop\nwhile True:\n    # Measure distance using the ultrasonic sensor\n    distance = sonar.ping(pin8, pin9)  # Trigger on pin8, Echo on pin9\n\n    # If an object is detected within 10"],[1,"while ECHO.read_digital() == 1:\n        end_time = utime.ticks_us()\n\n    duration = end_time - start_time\n    distance = (duration / 2) * 0.0343  # Convert to"],[0," cm\n"],[1,"\n"],[0,"    "]],"start1":245,"start2":245,"length1":844,"length2":590},{"diffs":[[0,"e < "],[-1,"10 and"],[1,"2 or"],[0," dis"]],"start1":845,"start2":845,"length1":14,"length2":12},{"diffs":[[0,"tance > "],[1,"40"],[0,"0:\n     "]],"start1":857,"start2":857,"length1":16,"length2":18},{"diffs":[[0,"    "],[-1,"# Stop the car\n        stop_car()\n        sleep(500)  # Wait for 0.5 seconds\n\n        # Move backward a little\n        move_backward()\n        sleep(500)  # Wait for 0.5 seconds\n\n        # Turn to the right\n        turn_right()"],[1,"return 100  # Return a default value if out of range\n\n    return distance\n\n# Main loop\nwhile True:\n    distance = get_distance()\n\n    if distance < 10:  # If an obstacle is detected\n        move(0, 0)  # Stop"],[0,"\n   "]],"start1":874,"start2":874,"length1":235,"length2":216},{"diffs":[[0,"    "],[1,"utime."],[0,"sleep"],[1,"_ms"],[0,"(500)"],[-1,"  # Wait for 0.5 seconds\n\n        # Continue forward\n        move_forward()\n    else:\n        makerbit.connect_ultrasonic_distance_sensor(DigitalPin.P5, DigitalPin.P8)\n        # If no object is detected, m"],[1,"\n\n        move(500, 0)  # Turn right\n        utime.sleep_ms(500)\n\n    else:\n        move(500, 500)  # M"],[0,"ove "]],"start1":1091,"start2":1091,"length1":223,"length2":130},{"diffs":[[0,"ard\n"],[1,"\n"],[0,"    "],[-1,"    move_forward()"],[1,"utime.sleep_ms(100)\n"]],"start1":1225,"start2":1225,"length1":26,"length2":29}]}]},{"timestamp":1742380792204,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"ort "],[-1,"machine\n"],[1,"sonar  # Assuming you have a sonar library for the ultrasonic sensor\n\n# Initialize servo pins"],[0,"\nlef"]],"start1":26,"start2":26,"length1":16,"length2":101},{"diffs":[[0,"= pin2\n\n"],[1,"# Function to move the car forward\n"],[0,"def move"]],"start1":154,"start2":154,"length1":16,"length2":51},{"diffs":[[0,"og(180) "],[1," # Left servo forward"],[0,"\n    rig"]],"start1":242,"start2":242,"length1":16,"length2":37},{"diffs":[[0,"log(0)  "],[-1,"\n"],[1," # Right servo forward\n\n# Function to move the car backward"],[0,"\ndef mov"]],"start1":297,"start2":297,"length1":17,"length2":75},{"diffs":[[0,"tion\n\n# "],[-1,"Function to m"],[1,"Main loop\nwhile True:\n    # M"],[0,"easure d"]],"start1":815,"start2":815,"length1":29,"length2":45},{"diffs":[[0,"e using "],[1,"the "],[0,"ultrason"]],"start1":866,"start2":866,"length1":16,"length2":20},{"diffs":[[0,"sor\n"],[-1,"def measure_distance(trigger_"],[1,"    distance = sonar.ping("],[0,"pin"],[1,"8"],[0,", "],[-1,"echo_pin):\n    trigger_pin.write_digital(1)\n    sleep(0.00001)\n    trigger_pin.write_digital(0)\n\n    while echo_pin.read_digital() == 0:\n        pass\n    start = running_time()\n\n    while echo_pin.read_digital() == 1:\n        pass\n    end = running_time()\n\n    duration = end - start\n    distance = (duration * 0.0343) / 2  # Distance in cm\n    return distance\n\n# Main loop\nwhile True:\n    distance = measure_distance(pin8, pin9)  # Trigger on pin8, Echo on pin9\n\n    if distance < 10 and distance > 0:\n        stop_car()\n        sleep(500)"],[1,"pin9)  # Trigger on pin8, Echo on pin9\n\n    # If an object is detected within 10 cm\n    if distance < 10 and distance > 0:\n        # Stop the car\n        stop_car()\n        sleep(500)  # Wait for 0.5 seconds\n\n        # Move backward a little\n        move_backward()\n        sleep(500)  # Wait for 0.5 seconds\n\n        # Turn to the right\n        turn_right()\n        sleep(500)  # Wait for 0.5 seconds\n\n        # Continue forward"],[0,"\n   "]],"start1":892,"start2":892,"length1":582,"length2":469},{"diffs":[[0,"rd\n        move_"],[-1,"back"],[1,"for"],[0,"ward()\n        s"]],"start1":1355,"start2":1355,"length1":36,"length2":35},{"diffs":[[0,"    "],[-1,"    sleep(500)\n        turn_right()\n        sleep(500)\n       "],[1,"else:\n        makerbit.connect_ultrasonic_distance_sensor(DigitalPin.P5, DigitalPin.P8)\n        # If no object is detected,"],[0," move"],[-1,"_"],[1," "],[0,"forward"],[-1,"()\n    else:"],[0,"\n   "]],"start1":1381,"start2":1381,"length1":95,"length2":144}]}]},{"timestamp":1742381389900,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"es><"],[-1,"variable id=\"SfqtH=Z?fJofP-^V;I5O\">distance</variable></variables><block type=\"device_forever\" x=\"20\" y=\"20\"><comment pinned=\"false\" h=\"80\" w=\"160\">Main loop</comment><statement name=\"HANDLER\"><block type=\"variables_set\"><field name=\"VAR\" id=\"SfqtH=Z?fJofP-^V;I5O\">distance</field><comment pinned=\"false\" h=\"80\" w=\"160\">Measure distance using the ultrasonic sensor</comment><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"sonar_ping\"><field name=\"trig\">DigitalPin.P8</field><field name=\"echo\">DigitalPin.P9</field><field name=\"unit\">PingUnit.Centimeters</field></block></value><next><block type=\"controls_if\"><mutation else=\"1\"></mutation><comment pinned=\"false\" h=\"80\" w=\"160\">If an object is detected within 10 cm</comment><value name=\"IF0\"><shadow type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_operation\"><field name=\"OP\">AND</field><value name=\"A\"><shadow type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\"><field name=\"OP\">LT</field><value name=\"A\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"SfqtH=Z?fJofP-^V;I5O\">distance</field></block></value><value name=\"B\"><shadow type=\"math_number\"><field name=\"NUM\">10</field></shadow></value></block></value><value name=\"B\"><shadow type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\"><field name=\"OP\">GT</field><value name=\"A\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"SfqtH=Z?fJofP-^V;I5O\">distance</field></block></value><value name=\"B\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow></value></block></value></block></value><statement name=\"DO0\"><block type=\"function_call\"><mutation name=\"stopCar\" functionid=\"v?T_JA0n7on`_F;n2+0(\"></mutation><comment pinned=\"false\" h=\"80\" w=\"160\">Stop the car</comment><next><block type=\"device_pause\"><comment pinned=\"false\" h=\"80\" w=\"160\">Wait for 0.5 seconds</comment><value name=\"pause\"><shadow type=\"timePicker\"><field name=\"ms\">500</field></shadow></value><next><block type=\"function_call\"><mutation name=\"moveBackward\" functionid=\"+!Z$h0h;9:1hJKw%I8YF\"></mutation><comment pinned=\"false\" h=\"80\" w=\"160\">Move backward a little</comment><next><block type=\"device_pause\"><comment pinned=\"false\" h=\"80\" w=\"160\">Wait for 0.5 seconds</comment><value name=\"pause\"><shadow type=\"timePicker\"><field name=\"ms\">500</field></shadow></value><next><block type=\"function_call\"><mutation name=\"turnRight\" functionid=\";dlmlm:u(dp[WIX=ZI6(\"></mutation><comment pinned=\"false\" h=\"80\" w=\"160\">Turn to the right</comment><next><block type=\"device_pause\"><comment pinned=\"false\" h=\"80\" w=\"160\">Wait for 0.5 seconds</comment><value name=\"pause\"><shadow type=\"timePicker\"><field name=\"ms\">500</field></shadow></value><next><block type=\"function_call\"><mutation name=\"moveForward\" functionid=\"dF7CkT@LIObRz}q:(m6@\"></mutation><comment pinned=\"false\" h=\"80\" w=\"160\">Continue forward</comment></block></next></block></next></block></next></block></next></block></next></block></next></block></statement><statement name=\"ELSE\"><block type=\"function_call\"><mutation name=\"moveForward\" functionid=\"dF7CkT@LIObRz}q:(m6@\"></mutation><comment pinned=\"false\" h=\"80\" w=\"160\">If no object is detected, move forward</comment></block></statement></block></next></block></statement></block><block type=\"function_definition\" x=\"813\" y=\"20\"><mutation name=\"moveForward\" functionid=\"dF7CkT@LIObRz}q:(m6@\"></mutation><field name=\"function_name\">moveForward</field><comment pinned=\"false\" h=\"80\" w=\"160\">Function to move the car forward</comment><statement name=\"STACK\"><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Left servo forward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P0</field></shadow><block type=\"digital_pin\"><field name=\"pin\">DigitalPin.P1</field></block></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">180</field></shadow></value><next><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Right servo forward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P0</field></shadow><block type=\"digital_pin\"><field name=\"pin\">DigitalPin.P2</field></block></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">0</field></shadow></value></block></next></block></statement></block><block type=\"function_definition\" x=\"1321\" y=\"20\"><mutation name=\"moveBackward\" functionid=\"+!Z$h0h;9:1hJKw%I8YF\"></mutation><field name=\"function_name\">moveBackward</field><comment pinned=\"false\" h=\"80\" w=\"160\">Function to move the car backward</comment><statement name=\"STACK\"><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Left servo backward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P0</field></shadow><block type=\"digital_pin\"><field name=\"pin\">DigitalPin.P1</field></block></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">0</field></shadow></value><next><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Right servo backward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P0</field></shadow><block type=\"digital_pin\"><field name=\"pin\">DigitalPin.P2</field></block></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">180</field></shadow></value></block></next></block></statement></block><block type=\"function_definition\" x=\"20\" y=\"801\"><mutation name=\"turnRight\" functionid=\";dlmlm:u(dp[WIX=ZI6(\"></mutation><field name=\"function_name\">turnRight</field><comment pinned=\"false\" h=\"80\" w=\"160\">Function to turn the car to the right</comment><statement name=\"STACK\"><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Left servo forward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P0</field></shadow><block type=\"digital_pin\"><field name=\"pin\">DigitalPin.P1</field></block></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">180</field></shadow></value><next><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Right servo backward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P0</field></shadow><block type=\"digital_pin\"><field name=\"pin\">DigitalPin.P2</field></block></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">180</field></shadow></value></block></next></block></statement></block><block type=\"function_definition\" x=\"528\" y=\"801\"><mutation name=\"stopCar\" functionid=\"v?T_JA0n7on`_F;n2+0(\"></mutation><field name=\"function_name\">stopCar</field><comment pinned=\"false\" h=\"80\" w=\"160\">Function to stop the car</comment><statement name=\"STACK\"><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Neutral position</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P0</field></shadow><block type=\"digital_pin\"><field name=\"pin\">DigitalPin.P1</field></block></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">90</field></shadow></value><next><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Neutral position</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P0</field></shadow><block type=\"digital_pin\"><field name=\"pin\">DigitalPin.P2</field></block></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">90</field></shadow></value></block></next></block></statement"],[1,"/variables><block type=\"pxt-on-start\" x=\"0\" y=\"0\"></block><block type=\"device_forever\" x=\"205\" y=\"0\""],[0,"></b"]],"start1":63,"start2":63,"length1":8242,"length2":108}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"let distance = 0\n//  Function to stop the car\nfunction stopCar() {\n    //  Neutral position\n    pins.servoWritePin(DigitalPin.P1, 90)\n    //  Neutral position\n    pins.servoWritePin(DigitalPin.P2, 90)\n}\n\n//  Function to move the car forward\nfunction moveForward() {\n    //  Left servo forward\n    pins.servoWritePin(DigitalPin.P1, 180)\n    //  Right servo forward\n    pins.servoWritePin(DigitalPin.P2, 0)\n}\n\n//  Function to turn the car to the right\nfunction turnRight() {\n    //  Left servo forward\n    pins.servoWritePin(DigitalPin.P1, 180)\n    //  Right servo backward\n    pins.servoWritePin(DigitalPin.P2, 180)\n}\n\n//  Function to move the car backward\nfunction moveBackward() {\n    //  Left servo backward\n    pins.servoWritePin(DigitalPin.P1, 0)\n    //  Right servo backward\n    pins.servoWritePin(DigitalPin.P2, 180)\n}\n\n//  Main loop\nbasic.forever(function on_forever() {\n    \n    //  Measure distance using the ultrasonic sensor\n    distance = sonar.ping(DigitalPin.P8, DigitalPin.P9, PingUnit.Centimeters)\n    //  If an object is detected within 10 cm\n    if (distance < 10 && distance > 0) {\n        //  Stop the car\n        stopCar()\n        //  Wait for 0.5 seconds\n        basic.pause(500)\n        //  Move backward a little\n        moveBackward()\n        //  Wait for 0.5 seconds\n        basic.pause(500)\n        //  Turn to the right\n        turnRight()\n        //  Wait for 0.5 seconds\n        basic.pause(500)\n        //  Continue forward\n        moveForward()\n    } else {\n        //  If no object is detected, move forward\n        moveForward()\n    }\n    \n})"],[0,"\n"]],"start1":0,"start2":0,"length1":1577,"length2":1}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[-1,"distance = 0\n# Function to stop the car\ndef stopC"],[1,"from microbit import *\nimport machine\n\nleft_servo = pin1\nright_servo = pin2\n\ndef move_forw"],[0,"ar"],[1,"d"],[0,"():\n    "],[-1,"# Neutral position\n    pins."],[1,"left_"],[0,"servo"],[-1,"_"],[1,"."],[0,"write_"],[-1,"pin(DigitalPin.P1, 9"],[1,"analog(18"],[0,"0)"],[1," "],[0,"\n    "],[-1,"# Neutral position\n    pins."],[1,"right_"],[0,"servo"],[-1,"_"],[1,"."],[0,"write_"],[-1,"pin(DigitalPin.P2, 90)\n# Function to move the car forward\ndef moveForward():\n"],[1,"analog(0)  \n\ndef move_backward():\n    left_servo.write_analog(0)"],[0,"    "]],"start1":0,"start2":0,"length1":247,"length2":221},{"diffs":[[0,"   # Left servo "],[-1,"for"],[1,"back"],[0,"ward\n    pins.se"]],"start1":218,"start2":218,"length1":35,"length2":36},{"diffs":[[0,"    "],[-1,"pins."],[1,"right_"],[0,"servo"],[-1,"_"],[1,"."],[0,"write_"],[-1,"pin(DigitalPin.P1, 180)\n   "],[1,"analog(180)"],[0," # R"]],"start1":243,"start2":243,"length1":52,"length2":37},{"diffs":[[0,"rvo "],[-1,"for"],[1,"back"],[0,"ward\n"],[-1,"    pins.servo_write_pin(DigitalPin.P2, 0)"],[0,"\n# F"]],"start1":287,"start2":287,"length1":58,"length2":17},{"diffs":[[0,"ght\ndef turn"],[-1,"R"],[1,"_r"],[0,"ight():\n    "]],"start1":337,"start2":337,"length1":25,"length2":26},{"diffs":[[0,"_right():\n  "],[1,"  left_servo.write_analog(180)"],[0,"  # Left ser"]],"start1":349,"start2":349,"length1":24,"length2":54},{"diffs":[[0,"    "],[-1,"pins."],[1,"right_"],[0,"servo"],[-1,"_"],[1,"."],[0,"write_"],[-1,"pin(DigitalPin.P1, 180)\n    # Right servo backward\n    pins.servo_write_pin(DigitalPin.P2, 180)"],[1,"analog(180) # Right servo backward\n"],[0,"\n# F"]],"start1":414,"start2":414,"length1":120,"length2":61},{"diffs":[[0," to "],[-1,"move"],[1,"stop"],[0," the car"],[-1," backward\ndef moveBackw"],[1,"\ndef stop_c"],[0,"ar"],[-1,"d"],[0,"():\n    "],[-1,"# Left "],[1,"left_"],[0,"servo"],[-1," backward\n    pins.servo_write_pin(DigitalPin.P1, 0)\n    # Right servo backward\n    pins."],[1,".write_analog(90)   # Neutral position\n    right_"],[0,"servo"],[-1,"_"],[1,"."],[0,"write_"],[-1,"pin(DigitalPin.P2, 180)\n# Main loop\n\ndef on_forever():\n    global distance\n    # M"],[1,"analog(90)  # Neutral position\n\n# Function to m"],[0,"easu"]],"start1":482,"start2":482,"length1":249,"length2":159},{"diffs":[[0,"e using "],[-1,"the "],[0,"ultrason"]],"start1":651,"start2":651,"length1":20,"length2":16},{"diffs":[[0,"sor\n"],[-1,"    distance = sonar.ping(DigitalPin.P8, DigitalPin.P9, PingUnit.CENTIMETERS)\n    # If an object is detected within 10 cm\n    if distance < 10 and distance > 0:\n        # Stop the car\n        stopCar()\n        # Wait for 0.5 seconds\n        basic.pause(500)\n        # Move backward a little\n        moveBackward()\n        # Wait for 0.5 seconds\n        basic.pause(500)\n        # Turn to the right\n        turnRight()\n        # Wait for 0.5 seconds\n        basic.pause(500)\n        # Continue forward"],[1,"def measure_distance(trigger_pin, echo_pin):\n    trigger_pin.write_digital(1)\n    sleep(0.00001)\n    trigger_pin.write_digital(0)\n\n    while echo_pin.read_digital() == 0:\n        pass\n    start = running_time()\n\n    while echo_pin.read_digital() == 1:\n        pass\n    end = running_time()\n\n    duration = end - start\n    distance = (duration * 0.0343) / 2  # Distance in cm\n    return distance\n\n# Main loop\nwhile True:\n    distance = measure_distance(pin8, pin9)  # Trigger on pin8, Echo on pin9\n\n    if distance < 10 and distance > 0:\n        stop_car()\n        sleep(500)\n        move_backward()\n        sleep(500)\n        turn_right()\n        sleep(500)"],[0,"\n   "]],"start1":673,"start2":673,"length1":508,"length2":665},{"diffs":[[0,"00)\n        move"],[-1,"F"],[1,"_f"],[0,"orward()\n    els"]],"start1":1331,"start2":1331,"length1":33,"length2":34},{"diffs":[[0,"    "],[-1," # If no object is detected,"],[0," move"],[-1," "],[1,"_"],[0,"forward"],[-1,"\n        moveForward()\nbasic.forever(on_forever)\n"],[1,"()"]],"start1":1371,"start2":1371,"length1":94,"length2":19}]}]},{"timestamp":1742381745541,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"nce = 0\n"],[-1,"\n"],[0,"//"],[1," "],[0," Functio"]],"start1":9,"start2":9,"length1":19,"length2":19},{"diffs":[[0," to "],[-1,"move"],[1,"stop"],[0," the car"],[-1," forward"],[0,"\nfun"]],"start1":29,"start2":29,"length1":28,"length2":20},{"diffs":[[0,"ion "],[-1,"moveForw"],[1,"stopC"],[0,"ar"],[-1,"d"],[0,"() {\n"],[1,"    //  Neutral position\n"],[0,"    "]],"start1":51,"start2":51,"length1":24,"length2":45},{"diffs":[[0,"P1, "],[-1,"180) // Left servo forward"],[1,"90)\n    //  Neutral position"],[0,"\n   "]],"start1":126,"start2":126,"length1":34,"length2":36},{"diffs":[[0,"P2, "],[1,"9"],[0,"0)"],[-1,"   // Right servo forward"],[0,"\n}\n\n//"],[1," "],[0," Fun"]],"start1":193,"start2":193,"length1":41,"length2":18},{"diffs":[[0,"the car "],[-1,"back"],[1,"for"],[0,"ward\nfun"]],"start1":225,"start2":225,"length1":20,"length2":19},{"diffs":[[0,"unction move"],[-1,"Back"],[1,"For"],[0,"ward() {\n   "]],"start1":242,"start2":242,"length1":28,"length2":27},{"diffs":[[0,"Forward() {\n"],[1,"    //  Left servo forward\n"],[0,"    pins.ser"]],"start1":254,"start2":254,"length1":24,"length2":51},{"diffs":[[0,"P1, "],[-1,"0)"],[1,"180)\n "],[0,"   // "],[-1,"Lef"],[1," Righ"],[0,"t servo "],[-1,"back"],[1,"for"],[0,"ward"]],"start1":327,"start2":327,"length1":31,"length2":36},{"diffs":[[0,"P2, "],[-1,"180) // Right servo backward"],[1,"0)"],[0,"\n}\n\n//"],[1," "],[0," Fun"]],"start1":398,"start2":398,"length1":42,"length2":17},{"diffs":[[0,"rnRight() {\n"],[1,"    //  Left servo forward\n"],[0,"    pins.ser"]],"start1":461,"start2":461,"length1":24,"length2":51},{"diffs":[[0,"180)"],[-1," // Lef"],[1,"\n    //  Righ"],[0,"t servo "],[-1,"for"],[1,"back"],[0,"ward"]],"start1":538,"start2":538,"length1":26,"length2":33},{"diffs":[[0,"180)"],[-1," // Right servo backward"],[0,"\n}\n\n//"],[1," "],[0," Fun"]],"start1":610,"start2":610,"length1":38,"length2":15},{"diffs":[[0,"Function to "],[-1,"stop"],[1,"move"],[0," the car"],[1," backward"],[0,"\nfunction st"]],"start1":622,"start2":622,"length1":36,"length2":45},{"diffs":[[0,"rd\nfunction "],[-1,"stopC"],[1,"moveBackw"],[0,"ar"],[1,"d"],[0,"() {\n"],[1,"    //  Left servo backward\n"],[0,"    pins.ser"]],"start1":653,"start2":653,"length1":36,"length2":69},{"diffs":[[0,"P1, "],[-1,"9"],[0,"0)"],[1,"\n "],[0,"  "],[1," "],[0,"// "],[-1,"Neutral position"],[1," Right servo backward"],[0,"\n   "]],"start1":744,"start2":744,"length1":32,"length2":39},{"diffs":[[0,"P2, "],[-1,"90)  // Neutral position"],[1,"180)"],[0,"\n}\n\n//"],[1," "],[0," Mai"]],"start1":814,"start2":814,"length1":38,"length2":19},{"diffs":[[0,"unction "],[1,"on_forever"],[0,"() {\n"],[1,"    \n"],[0,"    //"],[1," "],[0," Measure"]],"start1":855,"start2":855,"length1":27,"length2":43},{"diffs":[[0,"ar.ping("],[-1,"\n        "],[0,"DigitalP"]],"start1":954,"start2":954,"length1":25,"length2":16},{"diffs":[[0,"in.P"],[-1,"0, // Trigger pin (connected to pin0)\n       "],[1,"8,"],[0," Dig"]],"start1":970,"start2":970,"length1":53,"length2":10},{"diffs":[[0,"in.P"],[-1,"1, // Echo pin (connected to pin1)\n        PingUnit.Centimeters // Distance unit\n    )\n"],[1,"9, PingUnit.Centimeters)"],[0,"\n    //"],[1," "],[0," If "]],"start1":985,"start2":985,"length1":102,"length2":40},{"diffs":[[0,"      //"],[1," "],[0," Stop th"]],"start1":1103,"start2":1103,"length1":16,"length2":17},{"diffs":[[0,"\n       "],[-1," basic.pause(500)"],[0," //"],[1," "],[0," Wait fo"]],"start1":1143,"start2":1143,"length1":36,"length2":20},{"diffs":[[0,"for 0.5 seconds\n"],[1,"        basic.pause(500)"],[0,"\n        // Move"]],"start1":1161,"start2":1161,"length1":32,"length2":56},{"diffs":[[0,"      //"],[1," "],[0," Move ba"]],"start1":1204,"start2":1204,"length1":16,"length2":17},{"diffs":[[0,"\n       "],[-1," basic.pause(500)"],[0," //"],[1," "],[0," Wait fo"]],"start1":1259,"start2":1259,"length1":36,"length2":20},{"diffs":[[0,"for 0.5 seconds\n"],[1,"        basic.pause(500)"],[0,"\n        // Turn"]],"start1":1277,"start2":1277,"length1":32,"length2":56},{"diffs":[[0,"      //"],[1," "],[0," Turn to"]],"start1":1320,"start2":1320,"length1":16,"length2":17},{"diffs":[[0,"    "],[-1," basic.pause(500)"],[0," //"],[1," "],[0," Wai"]],"start1":1371,"start2":1371,"length1":28,"length2":12},{"diffs":[[0,"seconds\n"],[1,"        basic.pause(500)"],[0,"\n       "]],"start1":1393,"start2":1393,"length1":16,"length2":40},{"diffs":[[0,"      //"],[1," "],[0," Continu"]],"start1":1428,"start2":1428,"length1":16,"length2":17},{"diffs":[[0,"      //"],[1," "],[0," If no o"]],"start1":1492,"start2":1492,"length1":16,"length2":17},{"diffs":[[0,"  }\n"],[1,"    \n"],[0,"})"],[1,"\n"]],"start1":1565,"start2":1565,"length1":6,"length2":12}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"itor\": \""],[-1,"ts"],[1,"py"],[0,"prj\"\n}\n"]],"start1":450,"start2":450,"length1":17,"length2":17}]}]},{"timestamp":1742382419500,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"ble id=\""],[-1,"vZ6kH-S_k|0K$z-yw%um"],[1,"SfqtH=Z?fJofP-^V;I5O"],[0,"\">distan"]],"start1":72,"start2":72,"length1":36,"length2":36},{"diffs":[[0,"AR\" id=\""],[-1,"vZ6kH-S_k|0K$z-yw%um"],[1,"SfqtH=Z?fJofP-^V;I5O"],[0,"\">distan"]],"start1":302,"start2":302,"length1":36,"length2":36},{"diffs":[[0,"DigitalPin.P"],[-1,"0"],[1,"8"],[0,"</field><fie"]],"start1":568,"start2":568,"length1":25,"length2":25},{"diffs":[[0,"ho\">DigitalPin.P"],[-1,"1"],[1,"9"],[0,"</field><field n"]],"start1":604,"start2":604,"length1":33,"length2":33},{"diffs":[[0,"AR\" id=\""],[-1,"vZ6kH-S_k|0K$z-yw%um"],[1,"SfqtH=Z?fJofP-^V;I5O"],[0,"\">distan"]],"start1":1246,"start2":1246,"length1":36,"length2":36},{"diffs":[[0,"id=\""],[-1,"vZ6kH-S_k|0K$z-yw%um"],[1,"SfqtH=Z?fJofP-^V;I5O"],[0,"\">di"]],"start1":1677,"start2":1677,"length1":28,"length2":28},{"diffs":[[0,"tionid=\""],[-1,"pgGR$.n+vt)9YoUFBx@."],[1,"v?T_JA0n7on`_F;n2+0("],[0,"\"></muta"]],"start1":1933,"start2":1933,"length1":36,"length2":36},{"diffs":[[0,"tionid=\""],[-1,"mkp9l-TLKz4@:Z9}YI04"],[1,"+!Z$h0h;9:1hJKw%I8YF"],[0,"\"></muta"]],"start1":2296,"start2":2296,"length1":36,"length2":36},{"diffs":[[0,"tionid=\""],[-1,"i:gn?x!2Y}{8=WWh]Frp"],[1,";dlmlm:u(dp[WIX=ZI6("],[0,"\"></muta"]],"start1":2666,"start2":2666,"length1":36,"length2":36},{"diffs":[[0,"tionid=\""],[-1,"+2u*5Wi4WGprRWyt8its"],[1,"dF7CkT@LIObRz}q:(m6@"],[0,"\"></muta"]],"start1":3033,"start2":3033,"length1":36,"length2":36},{"diffs":[[0,"tionid=\""],[-1,"+2u*5Wi4WGprRWyt8its"],[1,"dF7CkT@LIObRz}q:(m6@"],[0,"\"></muta"]],"start1":3333,"start2":3333,"length1":36,"length2":36},{"diffs":[[0,"id=\""],[-1,"+2u*5Wi4WGprRWyt8its"],[1,"dF7CkT@LIObRz}q:(m6@"],[0,"\"></"]],"start1":3610,"start2":3610,"length1":28,"length2":28},{"diffs":[[0,"id=\""],[-1,"mkp9l-TLKz4@:Z9}YI04"],[1,"+!Z$h0h;9:1hJKw%I8YF"],[0,"\"></"]],"start1":4811,"start2":4811,"length1":28,"length2":28},{"diffs":[[0,"id=\""],[-1,"i:gn?x!2Y}{8=WWh]Frp"],[1,";dlmlm:u(dp[WIX=ZI6("],[0,"\"></"]],"start1":6012,"start2":6012,"length1":28,"length2":28},{"diffs":[[0,"id=\""],[-1,"pgGR$.n+vt)9YoUFBx@."],[1,"v?T_JA0n7on`_F;n2+0("],[0,"\"></"]],"start1":7214,"start2":7214,"length1":28,"length2":28}]}]},{"timestamp":1742382444251,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"ble id=\""],[-1,"y6C01tJMAxN/Tt|taKAN"],[1,"vZ6kH-S_k|0K$z-yw%um"],[0,"\">distan"]],"start1":72,"start2":72,"length1":36,"length2":36},{"diffs":[[0,"pe=\""],[-1,"pxt-on-start"],[1,"device_forever"],[0,"\" x="]],"start1":142,"start2":142,"length1":20,"length2":22},{"diffs":[[0,"0\"><"],[-1,"statement name=\"HANDLER\"><block type=\"typescript_statement\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" line0=\"let distance = 0\" numlines=\"1\" declaredvars=\"distance\"></mutation><next><block type=\"typescript_statement\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" line0=\"function measureDistance(triggerPin: DigitalPin, echoPin: DigitalPin): number {\" line1=\"    // Send a short pulse to the trigger pin\" line2=\"    pins.digitalWritePin(triggerPin, 0)\" line3=\"    control.waitMicros(2)\" line4=\"    pins.digitalWritePin(triggerPin, 1)\" line5=\"    control.waitMicros(10)\" line6=\"    pins.digitalWritePin(triggerPin, 0)\" line7=\"\" line8=\"    // Measure the duration of the echo pulse\" line9=\"    const duration = pins.pulseIn(echoPin, PulseValue.High)\" line10=\"\" line11=\"    // Calculate distance in centimeters\" line12=\"    distance = duration / 58\" line13=\"    return distance\" line14=\"}\" numlines=\"15"],[1,"comment pinned=\"false\" h=\"80\" w=\"160\">Main loop</comment><statement name=\"HANDLER\"><block type=\"variables_set\"><field name=\"VAR\" id=\"vZ6kH-S_k|0K$z-yw%um\">distance</field><comment pinned=\"false\" h=\"80\" w=\"160\">Measure distance using the ultrasonic sensor</comment><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM"],[0,"\">"],[1,"0"],[0,"</"],[-1,"mutation></block></next></block></statement></block><block type=\"device_forever\" x=\"792\" y=\"20\"><comment pinned=\"false\" h=\"80\" w=\"160\">Main loop</comment><statement name=\"HANDLER\"><block type=\"typescript_statement\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" line0=\"distance = measureDistance(DigitalPin.P0, DigitalPin.P1)\" numlines=\"1\"></mutation"],[1,"field></shadow><block type=\"sonar_ping\"><field name=\"trig\">DigitalPin.P0</field><field name=\"echo\">DigitalPin.P1</field><field name=\"unit\">PingUnit.Centimeters</field></block></value"],[0,"><ne"]],"start1":173,"start2":173,"length1":1265,"length2":522},{"diffs":[[0,"AR\" id=\""],[-1,"y6C01tJMAxN/Tt|taKAN"],[1,"vZ6kH-S_k|0K$z-yw%um"],[0,"\">distan"]],"start1":1246,"start2":1246,"length1":36,"length2":36},{"diffs":[[0,"id=\""],[-1,"y6C01tJMAxN/Tt|taKAN"],[1,"vZ6kH-S_k|0K$z-yw%um"],[0,"\">di"]],"start1":1677,"start2":1677,"length1":28,"length2":28},{"diffs":[[0,"tionid=\""],[-1,"T-NtR(6gjq7Y;_L_0k_k"],[1,"pgGR$.n+vt)9YoUFBx@."],[0,"\"></muta"]],"start1":1933,"start2":1933,"length1":36,"length2":36},{"diffs":[[0,"tionid=\""],[-1,"-eYAT@|L(m#fWuyo{*41"],[1,"mkp9l-TLKz4@:Z9}YI04"],[0,"\"></muta"]],"start1":2296,"start2":2296,"length1":36,"length2":36},{"diffs":[[0,"tionid=\""],[-1,"5;IoD-OC7K]H_g^_x1Dt"],[1,"i:gn?x!2Y}{8=WWh]Frp"],[0,"\"></muta"]],"start1":2666,"start2":2666,"length1":36,"length2":36},{"diffs":[[0,"tionid=\""],[-1,"x-kd(3LLjWcSYS,9l,P"],[1,"+2u*5Wi4WGprRWyt8it"],[0,"s\"></mut"]],"start1":3033,"start2":3033,"length1":35,"length2":35},{"diffs":[[0,"tionid=\""],[-1,"x-kd(3LLjWcSYS,9l,P"],[1,"+2u*5Wi4WGprRWyt8it"],[0,"s\"></mut"]],"start1":3333,"start2":3333,"length1":35,"length2":35},{"diffs":[[0," x=\""],[-1,"1585"],[1,"813"],[0,"\" y="]],"start1":3557,"start2":3557,"length1":12,"length2":11},{"diffs":[[0,"id=\""],[-1,"x-kd(3LLjWcSYS,9l,P"],[1,"+2u*5Wi4WGprRWyt8it"],[0,"s\"><"]],"start1":3610,"start2":3610,"length1":27,"length2":27},{"diffs":[[0," x=\""],[-1,"20"],[1,"1321"],[0,"\" y=\""],[-1,"801"],[1,"20"],[0,"\"><m"]],"start1":4756,"start2":4756,"length1":18,"length2":19},{"diffs":[[0,"id=\""],[-1,"-eYAT@|L(m#fWuyo{*41"],[1,"mkp9l-TLKz4@:Z9}YI04"],[0,"\"></"]],"start1":4811,"start2":4811,"length1":28,"length2":28},{"diffs":[[0," x=\""],[-1,"528"],[1,"20"],[0,"\" y="]],"start1":5961,"start2":5961,"length1":11,"length2":10},{"diffs":[[0,"id=\""],[-1,"5;IoD-OC7K]H_g^_x1Dt"],[1,"i:gn?x!2Y}{8=WWh]Frp"],[0,"\"></"]],"start1":6012,"start2":6012,"length1":28,"length2":28},{"diffs":[[0," x=\""],[-1,"1035"],[1,"528"],[0,"\" y="]],"start1":7164,"start2":7164,"length1":12,"length2":11},{"diffs":[[0,"id=\""],[-1,"T-NtR(6gjq7Y;_L_0k_k"],[1,"pgGR$.n+vt)9YoUFBx@."],[0,"\"></"]],"start1":7214,"start2":7214,"length1":28,"length2":28}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"// Function to stop the car\nfunction stopCar () {\n    // Neutral position\n    pins.servoWritePin(DigitalPin.P1, 90)\n    // Neutral position\n    pins.servoWritePin(DigitalPin.P2, 90)\n}"],[1,"let distance = 0\n"],[0,"\n// "]],"start1":0,"start2":0,"length1":187,"length2":21},{"diffs":[[0,"ward"],[-1," "],[0,"() {\n"],[-1,"    // Left servo forward\n"],[0,"    "]],"start1":70,"start2":70,"length1":40,"length2":13},{"diffs":[[0,"180)"],[-1,"\n    // Right servo forward\n    pins.servoWritePin(DigitalPin.P2, 0)\n}\n// Function to turn the car to the right\nfunction turnRight () {\n   "],[0," // "]],"start1":117,"start2":117,"length1":147,"length2":8},{"diffs":[[0,"in.P"],[-1,"1, 180)\n "],[1,"2, 0)"],[0,"   /"]],"start1":175,"start2":175,"length1":17,"length2":13},{"diffs":[[0,"rvo "],[-1,"backward\n    pins.servoWritePin(DigitalPin.P2, 180)"],[1,"forward"],[0,"\n}\n"],[1,"\n"],[0,"// F"]],"start1":198,"start2":198,"length1":62,"length2":19},{"diffs":[[0,"ward"],[-1," "],[0,"() {\n"],[-1,"    // Left servo backward\n"],[0,"    "]],"start1":267,"start2":267,"length1":41,"length2":13},{"diffs":[[0,", 0)"],[-1,"\n "],[0,"   // "],[-1,"Righ"],[1,"Lef"],[0,"t se"]],"start1":312,"start2":312,"length1":20,"length2":17},{"diffs":[[0,"180)"],[-1,"\n}\nlet distance = 0\nfunction measureDistance(triggerPin: DigitalPin, echoPin: DigitalPin): number {\n    // Send a short pulse to the trigger pin"],[1," // Right servo backward\n}\n\n// Function to turn the car to the right\nfunction turnRight() {"],[0,"\n   "]],"start1":380,"start2":380,"length1":152,"length2":99},{"diffs":[[0,"ht() {\n    pins."],[-1,"digital"],[1,"servo"],[0,"WritePin(trigger"]],"start1":469,"start2":469,"length1":39,"length2":37},{"diffs":[[0,"Pin("],[-1,"triggerPin, 0)\n    control.waitMicros(2)"],[1,"DigitalPin.P1, 180) // Left servo forward"],[0,"\n   "]],"start1":495,"start2":495,"length1":48,"length2":49},{"diffs":[[0,"orward\n    pins."],[-1,"digital"],[1,"servo"],[0,"WritePin(trigger"]],"start1":534,"start2":534,"length1":39,"length2":37},{"diffs":[[0,"Pin("],[-1,"triggerPin, 1)\n    control.waitMicros(10)"],[1,"DigitalPin.P2, 180) // Right servo backward\n}\n\n// Function to stop the car\nfunction stopCar() {"],[0,"\n   "]],"start1":560,"start2":560,"length1":49,"length2":103},{"diffs":[[0,"ins."],[-1,"digital"],[1,"servo"],[0,"Writ"]],"start1":665,"start2":665,"length1":15,"length2":13},{"diffs":[[0,"Pin("],[-1,"triggerPin"],[1,"DigitalPin.P1"],[0,", "],[1,"9"],[0,"0)"],[-1,"\n\n  "],[0,"  // "],[-1,"Measure the duration of the echo pulse\n    const duration = pins.pulseIn(echoPin, PulseValue.High)\n\n    // Calculate distance in centimeters\n    distance = duration / 58\n    return distance"],[1,"Neutral position\n    pins.servoWritePin(DigitalPin.P2, 90)  // Neutral position"],[0,"\n}\n"],[1,"\n"],[0,"// M"]],"start1":679,"start2":679,"length1":223,"length2":114},{"diffs":[[0,"    "],[-1,"distance = measureDistance(DigitalPin.P0, DigitalPin.P1)\n"],[1,"// Measure distance using the ultrasonic sensor\n    distance = sonar.ping(\n        DigitalPin.P0, // Trigger pin (connected to pin0)\n        DigitalPin.P1, // Echo pin (connected to pin1)\n        PingUnit.Centimeters // Distance unit\n    )\n\n    "],[0,"// I"]],"start1":830,"start2":830,"length1":65,"length2":253},{"diffs":[[0,"topCar()\n       "],[1," basic.pause(500)"],[0," // Wait for 0.5"]],"start1":1194,"start2":1194,"length1":32,"length2":49},{"diffs":[[0,"nds\n"],[-1,"        basic.pause(500)"],[0,"\n   "]],"start1":1248,"start2":1248,"length1":32,"length2":8},{"diffs":[[0,"ckward()\n       "],[1," basic.pause(500)"],[0," // Wait for 0.5"]],"start1":1301,"start2":1301,"length1":32,"length2":49},{"diffs":[[0,"nds\n"],[-1,"        basic.pause(500)"],[0,"\n   "]],"start1":1355,"start2":1355,"length1":32,"length2":8},{"diffs":[[0,"ht()\n       "],[1," basic.pause(500)"],[0," // Wait for"]],"start1":1404,"start2":1404,"length1":24,"length2":41},{"diffs":[[0,"nds\n"],[-1,"        basic.pause(500)"],[0,"\n   "]],"start1":1454,"start2":1454,"length1":32,"length2":8},{"diffs":[[0,"    }\n})"],[-1,"\n"]],"start1":1594,"start2":1594,"length1":9,"length2":8}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"itor\": \""],[-1,"block"],[1,"t"],[0,"sprj\"\n}\n"]],"start1":450,"start2":450,"length1":21,"length2":17}]}]},{"timestamp":1742382780649,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"art\" x=\""],[1,"2"],[0,"0\" y=\""],[1,"2"],[0,"0\"><stat"]],"start1":155,"start2":155,"length1":22,"length2":24},{"diffs":[[0,"x=\"7"],[-1,"7"],[1,"9"],[0,"2\" y=\""],[1,"2"],[0,"0\"><"]],"start1":1163,"start2":1163,"length1":15,"length2":16},{"diffs":[[0,"=\"15"],[-1,"6"],[1,"8"],[0,"5\" y=\""],[1,"2"],[0,"0\"><"]],"start1":4300,"start2":4300,"length1":15,"length2":16},{"diffs":[[0," x=\""],[1,"2"],[0,"0\" y=\""],[-1,"7"],[0,"8"],[1,"0"],[0,"1\"><"]],"start1":5498,"start2":5498,"length1":16,"length2":17},{"diffs":[[0,"x=\"5"],[-1,"0"],[1,"2"],[0,"8\" y=\""],[-1,"7"],[0,"8"],[1,"0"],[0,"1\"><"]],"start1":6703,"start2":6703,"length1":17,"length2":17},{"diffs":[[0,"=\"10"],[-1,"1"],[1,"3"],[0,"5\" y=\""],[-1,"7"],[0,"8"],[1,"0"],[0,"1\"><"]],"start1":7908,"start2":7908,"length1":17,"length2":17}]}]},{"timestamp":1742436895306,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"0.6\""],[-1,",\n        \"sonarbit\": \"github:elecfreaks/pxt-sonarbit#v1.0.9\""],[0,"\n   "]],"start1":319,"start2":319,"length1":69,"length2":8}]}]},{"timestamp":1742436913910,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"itor\": \""],[-1,"t"],[1,"block"],[0,"sprj\"\n}\n"]],"start1":511,"start2":511,"length1":17,"length2":21}]}]},{"timestamp":1742437676990,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[1,"// Function to stop the car\nfunction stopCar () {\n    // Neutral position\n    pins.servoWritePin(DigitalPin.P1, 90)\n    // Neutral position\n    pins.servoWritePin(DigitalPin.P2, 90)\n}\n// Function to move the car forward\nfunction moveForward () {\n    // Left servo forward\n    pins.servoWritePin(DigitalPin.P1, 180)\n    // Right servo forward\n    pins.servoWritePin(DigitalPin.P2, 0)\n}\n// Function to turn the car to the right\nfunction turnRight () {\n    // Left servo forward\n    pins.servoWritePin(DigitalPin.P1, 180)\n    // Right servo backward\n    pins.servoWritePin(DigitalPin.P2, 180)\n}\n// Function to move the car backward\nfunction moveBackward () {\n    // Left servo backward\n    pins.servoWritePin(DigitalPin.P1, 0)\n    // Right servo backward\n    pins.servoWritePin(DigitalPin.P2, 180)\n}\nlet distance = 0\nfunction measureDistance(triggerPin: DigitalPin, echoPin: DigitalPin): number {\n    // Send a short pulse to the trigger pin\n    pins.digitalWritePin(triggerPin, 0)\n    control.waitMicros(2)\n    pins.digitalWritePin(triggerPin, 1)\n    control.waitMicros(10)\n    pins.digitalWritePin(triggerPin, 0)\n\n    // Measure the duration of the echo pulse\n    const duration = pins.pulseIn(echoPin, PulseValue.High)\n\n    // Calculate distance in centimeters\n    distance = duration / 58\n    return distance\n}\n// Main loop\nbasic.forever(function () {\n    distance = measureDistance(DigitalPin.P0, DigitalPin.P1)\n// If an object is detected within 10 cm\n    if (distance < 10 && distance > 0) {\n        // Stop the car\n        stopCar()\n        // Wait for 0.5 seconds\n        basic.pause(500)\n        // Move backward a little\n        moveBackward()\n        // Wait for 0.5 seconds\n        basic.pause(500)\n        // Turn to the right\n        turnRight()\n        // Wait for 0.5 seconds\n        basic.pause(500)\n        // Continue forward\n        moveForward()\n    } else {\n        // If no object is detected, move forward\n        moveForward()\n    }\n})\n"]],"start1":0,"start2":0,"length1":0,"length2":1959}]}]},{"timestamp":1742437680170,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"ble id=\""],[-1,"%XZ+6RVHt04ND9F+lAE|"],[1,"y6C01tJMAxN/Tt|taKAN"],[0,"\">distan"]],"start1":72,"start2":72,"length1":36,"length2":36},{"diffs":[[0,"pe=\""],[-1,"device_forever"],[1,"pxt-on-start"],[0,"\" x=\""],[-1,"2"],[0,"0\" y=\""],[-1,"2"],[0,"0\"><"],[-1,"comment pinned=\"false\" h=\"80\" w=\"160\">Importing Ring:bit package (Make sure to add ElecFreaks Ring:bit extension)</comment><statement name=\"HANDLER\"><block type=\"variables_set\"><field name=\"VAR\" id=\"%XZ+6RVHt04ND9F+lAE|\">distance</field"],[1,"statement name=\"HANDLER\"><block type=\"typescript_statement\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" line0=\"let distance = 0\" numlines=\"1\" declaredvars=\"distance\"></mutation><next><block type=\"typescript_statement\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" line0=\"function measureDistance(triggerPin: DigitalPin, echoPin: DigitalPin): number {\" line1=\"    // Send a short pulse to the trigger pin\" line2=\"    pins.digitalWritePin(triggerPin, 0)\" line3=\"    control.waitMicros(2)\" line4=\"    pins.digitalWritePin(triggerPin, 1)\" line5=\"    control.waitMicros(10)\" line6=\"    pins.digitalWritePin(triggerPin, 0)\" line7=\"\" line8=\"    // Measure the duration of the echo pulse\" line9=\"    const duration = pins.pulseIn(echoPin, PulseValue.High)\" line10=\"\" line11=\"    // Calculate distance in centimeters\" line12=\"    distance = duration / 58\" line13=\"    return distance\" line14=\"}\" numlines=\"15\"></mutation></block></next></block></statement></block><block type=\"device_forever\" x=\"772\" y=\"0\"><comment pinned=\"false\" h=\"80\" w=\"160\">Main loop</comment><statement name=\"HANDLER\"><block type=\"typescript_statement\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" line0=\"distance = measureDistance(DigitalPin.P0, DigitalPin.P1)\" numlines=\"1\"></mutation><next><block type=\"controls_if\"><mutation else=\"1\"></mutation><comment pinned=\"false\" h=\"80\" w=\"160\">If an object is detected within 10 cm</comment"],[0,"><va"]],"start1":142,"start2":142,"length1":275,"length2":1439},{"diffs":[[0,"me=\""],[-1,"VALUE"],[1,"IF0"],[0,"\"><s"]],"start1":1587,"start2":1587,"length1":13,"length2":11},{"diffs":[[0,"hadow type=\""],[-1,"math_number"],[1,"logic_boolean"],[0,"\"><field nam"]],"start1":1598,"start2":1598,"length1":35,"length2":37},{"diffs":[[0,"n\"><field name=\""],[-1,"NUM\">0"],[1,"BOOL\">TRUE"],[0,"</field></shadow"]],"start1":1622,"start2":1622,"length1":38,"length2":42},{"diffs":[[0,"pe=\""],[-1,"sonar_ping\"><field name=\"trig\">DigitalPin.P1</field><field name=\"echo\">DigitalPin.P2</field><field name=\"unit\">PingUnit.Centimeters</field></block></value><next><block type=\"controls_if\"><mutation else=\"1\"></mutation"],[1,"logic_operation\"><field name=\"OP\">AND</field><value name=\"A\"><shadow type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\"><field name=\"OP\">LT</field><value name=\"A\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"y6C01tJMAxN/Tt|taKAN\">distance</field></block></value><value name=\"B\"><shadow type=\"math_number\"><field name=\"NUM\">10</field></shadow></value></block></value"],[0,"><va"]],"start1":1674,"start2":1674,"length1":224,"length2":479},{"diffs":[[0,"ue><value name=\""],[-1,"IF0"],[1,"B"],[0,"\"><shadow type=\""]],"start1":2147,"start2":2147,"length1":35,"length2":33},{"diffs":[[0,"OP\">"],[-1,"LTE"],[1,"GT"],[0,"</fi"]],"start1":2276,"start2":2276,"length1":11,"length2":10},{"diffs":[[0,"id=\""],[-1,"%XZ+6RVHt04ND9F+lAE|"],[1,"y6C01tJMAxN/Tt|taKAN"],[0,"\">di"]],"start1":2415,"start2":2415,"length1":28,"length2":28},{"diffs":[[0,"ield name=\"NUM\">"],[-1,"1"],[0,"0</field></shado"]],"start1":2518,"start2":2518,"length1":33,"length2":32},{"diffs":[[0,"/value><"],[1,"/block></value><"],[0,"statemen"]],"start1":2569,"start2":2569,"length1":16,"length2":32},{"diffs":[[0,"k type=\""],[-1,"device_set_servo_pin\""],[1,"function_call\"><mutation name=\"stopCar\" functionid=\"T-NtR(6gjq7Y;_L_0k_k\"></mutation><comment pinned=\"false\" h=\"80\" w=\"160\">Stop the car</comment><next><block type=\"device_pause\"><comment pinned=\"false\" h=\"80\" w=\"160\">Wait for 0.5 seconds</comment><value name=\"pause\"><shadow type=\"timePicker\"><field name=\"ms\">500</field></shadow></value><next><block type=\"function_call\"><mutation name=\"moveBackward\" functionid=\"-eYAT@|L(m#fWuyo{*41\"></mutation"],[0,"><commen"]],"start1":2619,"start2":2619,"length1":37,"length2":463},{"diffs":[[0,"ove "],[-1,"B"],[1,"b"],[0,"ackward"],[-1,"\nLeft wheel backward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P8</field></shadow></value><value name=\"value\"><shadow type=\"math_number_minmax"],[1," a little</comment><next><block type=\"device_pause\"><comment pinned=\"false\" h=\"80\" w=\"160\">Wait for 0.5 seconds</comment><value name=\"pause\"><shadow type=\"timePicker\"><field name=\"ms\">500</field></shadow></value><next><block type=\"function_call\"><mutation name=\"turnRight\" functionid=\"5;IoD-OC7K]H_g^_x1Dt\"></mutation><comment pinned=\"false\" h=\"80\" w=\"160\">Turn to the right</comment><next><block type=\"device_pause\"><comment pinned=\"false\" h=\"80\" w=\"160\">Wait for 0.5 seconds</comment><value name=\"pause\"><shadow type=\"timePicker\"><field name=\"ms\">500</field></shadow></value><next><block type=\"function_call\"><mutation name=\"moveForward\" functionid=\"x-kd(3LLjWcSYS,9l,Ps\"></mutation><comment pinned=\"false\" h=\"80\" w=\"160\">Continue forward</comment></block></next></block></next></block></next></block></next></block></next></block></next></block></statement><statement name=\"ELSE\"><block type=\"function_call\"><mutation name=\"moveForward\" functionid=\"x-kd(3LLjWcSYS,9l,Ps"],[0,"\"><"],[1,"/"],[0,"mutation"],[-1," min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">180</field></shadow></value><next"],[1,"><comment pinned=\"false\" h=\"80\" w=\"160\">If no object is detected, move forward</comment></block></statement></block></next></block></statement></block><block type=\"function_definition\" x=\"1565\" y=\"0\"><mutation name=\"moveForward\" functionid=\"x-kd(3LLjWcSYS,9l,Ps\"></mutation><field name=\"function_name\">moveForward</field><comment pinned=\"false\" h=\"80\" w=\"160\">Function to move the car forward</comment><statement name=\"STACK\""],[0,"><bl"]],"start1":3115,"start2":3115,"length1":314,"length2":1425},{"diffs":[[0,"60\">"],[-1,"Right wheel back"],[1,"Left servo for"],[0,"ward"]],"start1":4607,"start2":4607,"length1":24,"length2":22},{"diffs":[[0,"pin\">AnalogPin.P"],[-1,"12"],[1,"0"],[0,"</field></shadow"]],"start1":4704,"start2":4704,"length1":34,"length2":33},{"diffs":[[0,"field></shadow><"],[1,"block type=\"digital_pin\"><field name=\"pin\">DigitalPin.P1</field></block><"],[0,"/value><value na"]],"start1":4723,"start2":4723,"length1":32,"length2":105},{"diffs":[[0,"d name=\"SLIDER\">"],[1,"18"],[0,"0</field></shado"]],"start1":4931,"start2":4931,"length1":32,"length2":34},{"diffs":[[0,"ck type=\"device_"],[-1,"pause"],[1,"set_servo_pin"],[0,"\"><comment pinne"]],"start1":4985,"start2":4985,"length1":37,"length2":45},{"diffs":[[0,"60\">"],[-1,"Move back for 0.5s"],[1,"Right servo forward"],[0,"</co"]],"start1":5051,"start2":5051,"length1":26,"length2":27},{"diffs":[[0,"me=\""],[-1,"pause\"><shadow type=\"timePicker\""],[1,"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P0</field></shadow><block type=\"digital_pin\"><field name=\"pin\">DigitalPin.P2</field></block></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation"],[0,"><fi"]],"start1":5093,"start2":5093,"length1":40,"length2":281},{"diffs":[[0,"on><field name=\""],[-1,"ms\">50"],[1,"SLIDER\">"],[0,"0</field></shado"]],"start1":5368,"start2":5368,"length1":38,"length2":40},{"diffs":[[0,"shadow></value><"],[-1,"next"],[1,"/block></next></block></statement></block><block type=\"function_definition\" x=\"0\" y=\"781\"><mutation name=\"moveBackward\" functionid=\"-eYAT@|L(m#fWuyo{*41\"></mutation><field name=\"function_name\">moveBackward</field><comment pinned=\"false\" h=\"80\" w=\"160\">Function to move the car backward</comment><statement name=\"STACK\""],[0,"><block type=\"de"]],"start1":5403,"start2":5403,"length1":36,"length2":350},{"diffs":[[0,"60\">"],[-1,"Turn Right\nLeft wheel for"],[1,"Left servo back"],[0,"ward"]],"start1":5808,"start2":5808,"length1":33,"length2":23},{"diffs":[[0,"pin\">AnalogPin.P"],[-1,"8"],[1,"0"],[0,"</field></shadow"]],"start1":5906,"start2":5906,"length1":33,"length2":33},{"diffs":[[0,"field></shadow><"],[1,"block type=\"digital_pin\"><field name=\"pin\">DigitalPin.P1</field></block><"],[0,"/value><value na"]],"start1":5925,"start2":5925,"length1":32,"length2":105},{"diffs":[[0,"d name=\"SLIDER\">"],[-1,"18"],[0,"0</field></shado"]],"start1":6133,"start2":6133,"length1":34,"length2":32},{"diffs":[[0,"ght "],[-1,"wheel stop"],[1,"servo backward"],[0,"</co"]],"start1":6257,"start2":6257,"length1":18,"length2":22},{"diffs":[[0,"pin\">AnalogPin.P"],[-1,"12"],[1,"0"],[0,"</field></shadow"]],"start1":6350,"start2":6350,"length1":34,"length2":33},{"diffs":[[0,"field></shadow><"],[1,"block type=\"digital_pin\"><field name=\"pin\">DigitalPin.P2</field></block><"],[0,"/value><value na"]],"start1":6369,"start2":6369,"length1":32,"length2":105},{"diffs":[[0,"ue><"],[-1,"next><block type=\"device_pause\"><comment pinned=\"false\" h=\"80\" w=\"160\">Turn right for 0.5s</comment><value name=\"pause\"><shadow type=\"timePicker\"><field name=\"ms\">500</field></shadow></value><next"],[1,"/block></next></block></statement></block><block type=\"function_definition\" x=\"508\" y=\"781\"><mutation name=\"turnRight\" functionid=\"5;IoD-OC7K]H_g^_x1Dt\"></mutation><field name=\"function_name\">turnRight</field><comment pinned=\"false\" h=\"80\" w=\"160\">Function to turn the car to the right</comment><statement name=\"STACK\""],[0,"><bl"]],"start1":6618,"start2":6618,"length1":204,"length2":326},{"diffs":[[0,"60\">"],[-1,"Move Forward Again\nLeft wheel"],[1,"Left servo"],[0," for"]],"start1":7011,"start2":7011,"length1":37,"length2":18},{"diffs":[[0,"pin\">AnalogPin.P"],[-1,"8"],[1,"0"],[0,"</field></shadow"]],"start1":7108,"start2":7108,"length1":33,"length2":33},{"diffs":[[0,"field></shadow><"],[1,"block type=\"digital_pin\"><field name=\"pin\">DigitalPin.P1</field></block><"],[0,"/value><value na"]],"start1":7127,"start2":7127,"length1":32,"length2":105},{"diffs":[[0,"d name=\"SLIDER\">"],[1,"18"],[0,"0</field></shado"]],"start1":7335,"start2":7335,"length1":32,"length2":34},{"diffs":[[0,"\"160\">Right "],[-1,"wheel for"],[1,"servo back"],[0,"ward</commen"]],"start1":7453,"start2":7453,"length1":33,"length2":34},{"diffs":[[0,"pin\">AnalogPin.P"],[-1,"12"],[1,"0"],[0,"</field></shadow"]],"start1":7554,"start2":7554,"length1":34,"length2":33},{"diffs":[[0,"field></shadow><"],[1,"block type=\"digital_pin\"><field name=\"pin\">DigitalPin.P2</field></block><"],[0,"/value><value na"]],"start1":7573,"start2":7573,"length1":32,"length2":105},{"diffs":[[0,"/next></block></"],[-1,"nex"],[1,"statemen"],[0,"t></block></next"]],"start1":7834,"start2":7834,"length1":35,"length2":40},{"diffs":[[0,"ck><"],[-1,"/next></block></next></block></next></block></next></block></next></block></state"],[1,"block type=\"function_definition\" x=\"1015\" y=\"781\"><mutation name=\"stopCar\" functionid=\"T-NtR(6gjq7Y;_L_0k_k\"></mutation><field name=\"function_name\">stopCar</field><comment pinned=\"false\" h=\"80\" w=\"160\">Function to stop the car</com"],[0,"ment"]],"start1":7865,"start2":7865,"length1":89,"length2":239},{"diffs":[[0,"statement name=\""],[-1,"ELSE"],[1,"STACK"],[0,"\"><block type=\"d"]],"start1":8106,"start2":8106,"length1":36,"length2":37},{"diffs":[[0,"60\">"],[-1,"Move Forward Normally\nLeft wheel forward"],[1,"Neutral position"],[0,"</co"]],"start1":8199,"start2":8199,"length1":48,"length2":24},{"diffs":[[0,"logPin.P"],[-1,"8"],[1,"0"],[0,"</field>"]],"start1":8302,"start2":8302,"length1":17,"length2":17},{"diffs":[[0,"field></shadow><"],[1,"block type=\"digital_pin\"><field name=\"pin\">DigitalPin.P1</field></block><"],[0,"/value><value na"]],"start1":8313,"start2":8313,"length1":32,"length2":105},{"diffs":[[0,"d name=\"SLIDER\">"],[1,"9"],[0,"0</field></shado"]],"start1":8521,"start2":8521,"length1":32,"length2":33},{"diffs":[[0,"60\">"],[-1,"Right wheel forward"],[1,"Neutral position"],[0,"</co"]],"start1":8640,"start2":8640,"length1":27,"length2":24},{"diffs":[[0,"logPin.P"],[-1,"12"],[1,"0"],[0,"</field>"]],"start1":8743,"start2":8743,"length1":18,"length2":17},{"diffs":[[0,"field></shadow><"],[1,"block type=\"digital_pin\"><field name=\"pin\">DigitalPin.P2</field></block><"],[0,"/value><value na"]],"start1":8754,"start2":8754,"length1":32,"length2":105},{"diffs":[[0,"d name=\"SLIDER\">"],[-1,"18"],[1,"9"],[0,"0</field></shado"]],"start1":8962,"start2":8962,"length1":34,"length2":33},{"diffs":[[0,"k></"],[-1,"next></block></statement></block></"],[0,"xml>"]],"start1":9046,"start2":9046,"length1":43,"length2":8}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"basic.forever(function () {\n    let distance = sonar.ping(DigitalPin.P0, DigitalPin.P0, PingUnit.Centimeters)\n\n    if (distance <= 10) {\n        // Move Backward\n        pins.servoWritePin(AnalogPin.P1, 180) // Right wheel backward\n        pins.servoWritePin(AnalogPin.P2, 0)   // Left wheel backward\n        basic.pause(500) // Move back for 0.5s\n\n        // Turn Right\n        pins.servoWritePin(AnalogPin.P1, 180) // Right wheel stop\n        pins.servoWritePin(AnalogPin.P2, 180) // Left wheel forward\n        basic.pause(500) // Turn right for 0.5s\n\n        // Move Forward Again\n        pins.servoWritePin(AnalogPin.P1, 0)   // Right wheel forward\n        pins.servoWritePin(AnalogPin.P2, 180) // Left wheel forward\n    } else {\n        // Move Forward Normally\n        pins.servoWritePin(AnalogPin.P1, 0)   // Right wheel forward\n        pins.servoWritePin(AnalogPin.P2, 180) // Left wheel forward\n    }\n})\n"]],"start1":0,"start2":0,"length1":913,"length2":0}]}]},{"timestamp":1742438231476,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"ble id=\""],[-1,"HkJ+-v,R!|G+t:j!V.l;"],[1,"%XZ+6RVHt04ND9F+lAE|"],[0,"\">distan"]],"start1":72,"start2":72,"length1":36,"length2":36},{"diffs":[[0," x=\""],[1,"2"],[0,"0\" y=\""],[1,"2"],[0,"0\"><"],[1,"comment pinned=\"false\" h=\"80\" w=\"160\">Importing Ring:bit package (Make sure to add ElecFreaks Ring:bit extension)</comment><"],[0,"stat"]],"start1":161,"start2":161,"length1":18,"length2":144},{"diffs":[[0,"AR\" id=\""],[-1,"HkJ+-v,R!|G+t:j!V.l;"],[1,"%XZ+6RVHt04ND9F+lAE|"],[0,"\">distan"]],"start1":368,"start2":368,"length1":36,"length2":36},{"diffs":[[0,"ig\">DigitalPin.P"],[-1,"0"],[1,"1"],[0,"</field><field n"]],"start1":537,"start2":537,"length1":33,"length2":33},{"diffs":[[0,"talPin.P"],[-1,"0"],[1,"2"],[0,"</field>"]],"start1":585,"start2":585,"length1":17,"length2":17},{"diffs":[[0,"id=\""],[-1,"HkJ+-v,R!|G+t:j!V.l;"],[1,"%XZ+6RVHt04ND9F+lAE|"],[0,"\">di"]],"start1":995,"start2":995,"length1":28,"length2":28},{"diffs":[[0,"ward"],[-1," (1 inch)\nRigh"],[1,"\nLef"],[0,"t wh"]],"start1":1262,"start2":1262,"length1":22,"length2":12},{"diffs":[[0,"pin\">AnalogPin.P"],[-1,"1"],[1,"8"],[0,"</field></shadow"]],"start1":1361,"start2":1361,"length1":33,"length2":33},{"diffs":[[0," h=\"80\" w=\"160\">"],[-1,"Lef"],[1,"Righ"],[0,"t wheel backward"]],"start1":1623,"start2":1623,"length1":35,"length2":36},{"diffs":[[0,"pin\">AnalogPin.P"],[1,"1"],[0,"2</field></shado"]],"start1":1734,"start2":1734,"length1":32,"length2":33},{"diffs":[[0,"for "],[-1,"300ms (~1 inch)"],[1,"0.5s"],[0,"</co"]],"start1":2013,"start2":2013,"length1":23,"length2":12},{"diffs":[[0,"ms\">"],[-1,"3"],[1,"5"],[0,"00</"]],"start1":2090,"start2":2090,"length1":9,"length2":9},{"diffs":[[0,"ght\n"],[-1,"Righ"],[1,"Lef"],[0,"t wheel "],[-1,"stop"],[1,"forward"],[0,"</co"]],"start1":2209,"start2":2209,"length1":24,"length2":26},{"diffs":[[0,"pin\">AnalogPin.P"],[-1,"1"],[1,"8"],[0,"</field></shadow"]],"start1":2306,"start2":2306,"length1":33,"length2":33},{"diffs":[[0,"w=\"160\">"],[-1,"Lef"],[1,"Righ"],[0,"t wheel "],[-1,"forward"],[1,"stop"],[0,"</commen"]],"start1":2576,"start2":2576,"length1":34,"length2":32},{"diffs":[[0,"pin\">AnalogPin.P"],[1,"1"],[0,"2</field></shado"]],"start1":2675,"start2":2675,"length1":32,"length2":33},{"diffs":[[0,"for "],[-1,"400m"],[1,"0.5"],[0,"s</c"]],"start1":2957,"start2":2957,"length1":12,"length2":11},{"diffs":[[0,"me=\"ms\">"],[-1,"4"],[1,"5"],[0,"00</fiel"]],"start1":3030,"start2":3030,"length1":17,"length2":17},{"diffs":[[0,"d Again\n"],[-1,"Righ"],[1,"Lef"],[0,"t wheel "]],"start1":3157,"start2":3157,"length1":20,"length2":19},{"diffs":[[0,"pin\">AnalogPin.P"],[-1,"1"],[1,"8"],[0,"</field></shadow"]],"start1":3258,"start2":3258,"length1":33,"length2":33},{"diffs":[[0," h=\"80\" w=\"160\">"],[-1,"Lef"],[1,"Righ"],[0,"t wheel forward<"]],"start1":3518,"start2":3518,"length1":35,"length2":36},{"diffs":[[0,"pin\">AnalogPin.P"],[1,"1"],[0,"2</field></shado"]],"start1":3628,"start2":3628,"length1":32,"length2":33},{"diffs":[[0,"ormally\n"],[-1,"Righ"],[1,"Lef"],[0,"t wheel "]],"start1":4063,"start2":4063,"length1":20,"length2":19},{"diffs":[[0,">AnalogPin.P"],[-1,"1"],[1,"8"],[0,"</field></sh"]],"start1":4168,"start2":4168,"length1":25,"length2":25},{"diffs":[[0,"w=\"160\">"],[-1,"Lef"],[1,"Righ"],[0,"t wheel "]],"start1":4432,"start2":4432,"length1":19,"length2":20},{"diffs":[[0,">AnalogPin.P"],[1,"1"],[0,"2</field></s"]],"start1":4538,"start2":4538,"length1":24,"length2":25}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"let distance = 0\n"],[0,"basi"]],"start1":0,"start2":0,"length1":21,"length2":4},{"diffs":[[0,") {\n    "],[1,"let "],[0,"distance"]],"start1":24,"start2":24,"length1":16,"length2":20},{"diffs":[[0,"ar.ping("],[-1,"\n    "],[0,"DigitalP"]],"start1":50,"start2":50,"length1":21,"length2":16},{"diffs":[[0,"lPin.P0,"],[-1,"\n   "],[0," Digital"]],"start1":64,"start2":64,"length1":20,"length2":16},{"diffs":[[0,"lPin.P0,"],[-1,"\n   "],[0," PingUni"]],"start1":79,"start2":79,"length1":20,"length2":16},{"diffs":[[0,"ters"],[-1,"\n    "],[0,")"],[1,"\n"],[0,"\n   "]],"start1":104,"start2":104,"length1":14,"length2":10},{"diffs":[[0,"ward"],[-1," (1 inch)\n        // Right wheel backward"],[0,"\n   "]],"start1":157,"start2":157,"length1":49,"length2":8},{"diffs":[[0,"Pin.P1, 180)"],[-1,"\n        // Lef"],[1," // Righ"],[0,"t wheel back"]],"start1":195,"start2":195,"length1":39,"length2":32},{"diffs":[[0,", 0)"],[-1,"\n        // Move back for 300ms (~1 inch)"],[1,"   // Left wheel backward"],[0,"\n   "]],"start1":271,"start2":271,"length1":49,"length2":33},{"diffs":[[0,"use("],[-1,"300)\n        // Turn Right\n        // Right wheel stop"],[1,"500) // Move back for 0.5s\n\n        // Turn Right"],[0,"\n   "]],"start1":317,"start2":317,"length1":62,"length2":57},{"diffs":[[0,"180)"],[-1,"\n        // Lef"],[1," // Righ"],[0,"t wheel "],[-1,"forward"],[1,"stop"],[0,"\n   "]],"start1":412,"start2":412,"length1":38,"length2":28},{"diffs":[[0,"180)"],[-1,"\n        // Turn right for 400ms"],[1," // Left wheel forward"],[0,"\n   "]],"start1":478,"start2":478,"length1":40,"length2":30},{"diffs":[[0,"use("],[-1,"4"],[1,"5"],[0,"00)"],[1," // Turn right for 0.5s\n"],[0,"\n   "]],"start1":521,"start2":521,"length1":12,"length2":36},{"diffs":[[0,"ain\n"],[-1,"        // Right wheel forward\n"],[0,"    "]],"start1":580,"start2":580,"length1":39,"length2":8},{"diffs":[[0,"ogPin.P1, 0)"],[-1,"\n    "],[0,"   "],[-1," "],[0,"// "],[-1,"Lef"],[1,"Righ"],[0,"t wheel forw"]],"start1":615,"start2":615,"length1":39,"length2":34},{"diffs":[[0,"Pin.P2, 180)"],[1," // Left wheel forward"],[0,"\n    } else "]],"start1":686,"start2":686,"length1":24,"length2":46},{"diffs":[[0,"lly\n"],[-1,"        // Right wheel forward\n"],[0,"    "]],"start1":763,"start2":763,"length1":39,"length2":8},{"diffs":[[0,", 0)"],[-1,"\n     "],[0,"   // "],[-1,"Lef"],[1,"Righ"],[0,"t wh"]],"start1":806,"start2":806,"length1":23,"length2":18},{"diffs":[[0,"P2, 180)"],[1," // Left wheel forward"],[0,"\n    }\n}"]],"start1":873,"start2":873,"length1":16,"length2":38}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"itor\": \""],[-1,"block"],[1,"t"],[0,"sprj\"\n}\n"]],"start1":511,"start2":511,"length1":21,"length2":17}]}]},{"timestamp":1742438687242,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"ble id=\""],[-1,"aO?p(_53)k:j(;WLW/wC"],[1,"HkJ+-v,R!|G+t:j!V.l;"],[0,"\">distan"]],"start1":72,"start2":72,"length1":36,"length2":36},{"diffs":[[0," x=\""],[-1,"2"],[0,"0\" y=\""],[-1,"2"],[0,"0\"><"]],"start1":161,"start2":161,"length1":16,"length2":14},{"diffs":[[0,"AR\" id=\""],[-1,"aO?p(_53)k:j(;WLW/wC"],[1,"HkJ+-v,R!|G+t:j!V.l;"],[0,"\">distan"]],"start1":242,"start2":242,"length1":36,"length2":36},{"diffs":[[0,"id=\""],[-1,"aO?p(_53)k:j(;WLW/wC"],[1,"HkJ+-v,R!|G+t:j!V.l;"],[0,"\">di"]],"start1":869,"start2":869,"length1":28,"length2":28}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"itor\": \""],[-1,"t"],[1,"block"],[0,"sprj\"\n}\n"]],"start1":511,"start2":511,"length1":17,"length2":21}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"= 0\n"],[-1,"\ndef on_forever():\n    global distance\n    distance = sonar."],[1,"# Function to stop the car\ndef stopCar():\n    # Neutral position\n    pins.servo_write_"],[0,"pin"],[-1,"g"],[0,"(Dig"]],"start1":9,"start2":9,"length1":72,"length2":97},{"diffs":[[0,"talPin.P"],[-1,"0, "],[1,"1, 90)\n    # Neutral position\n    pins.servo_write_pin("],[0,"DigitalP"]],"start1":107,"start2":107,"length1":19,"length2":71},{"diffs":[[0,"in.P"],[-1,"0, PingUnit.CENTIMETERS)\n    if distance <= 10:\n        # Move Backward (1 inch)\n        # Right wheel back"],[1,"2, 90)\n# Function to move the car forward\ndef moveForward():\n    # Left servo forward\n    pins.servo_write_pin(DigitalPin.P1, 180)\n    # Right servo forward\n    pins.servo_write_pin(DigitalPin.P2, 0)\n# Function to turn the car to the right\ndef turnRight():\n    # Left servo for"],[0,"ward\n"],[-1,"    "],[0,"    "]],"start1":178,"start2":178,"length1":124,"length2":290},{"diffs":[[0,"servo_write_pin("],[-1,"Analog"],[1,"Digital"],[0,"Pin.P1, 180)\n   "]],"start1":473,"start2":473,"length1":38,"length2":39},{"diffs":[[0,"80)\n    "],[-1,"    # Left wheel"],[1,"# Right servo"],[0," backwar"]],"start1":505,"start2":505,"length1":32,"length2":29},{"diffs":[[0,"vo backward\n"],[-1,"    "],[0,"    pins.ser"]],"start1":524,"start2":524,"length1":28,"length2":24},{"diffs":[[0,"pin("],[-1,"Analog"],[1,"Digital"],[0,"Pin.P2, "],[1,"18"],[0,"0)\n"],[-1,"        # Move back for 300ms (~1 inch)\n        basic.pause(300)\n        # Turn Right\n        # Right wheel stop\n    "],[1,"# Function to move the car backward\ndef moveBackward():\n    # Left servo backward\n    pins.servo_write_pin(DigitalPin.P1, 0)\n    # Right servo backward\n"],[0,"    "]],"start1":557,"start2":557,"length1":142,"length2":180},{"diffs":[[0,"pin("],[-1,"Analog"],[1,"Digital"],[0,"Pin.P"],[-1,"1"],[1,"2"],[0,", 180)\n"],[-1,"        # Left wheel forward\n        pins.servo_write_pin(Analog"],[1,"# Main loop\n\ndef on_forever():\n    global distance\n    # Measure distance using the ultrasonic sensor\n    distance = sonar.ping(DigitalPin.P8, Digital"],[0,"Pin.P"],[-1,"2, 180)\n        # Turn right for 400m"],[1,"9, PingUnit.CENTIMETERS)\n    # If an object is detected within 10 cm\n    if distance < 10 and distance > 0:\n        # Stop the car\n        stopCar()\n        # Wait for 0.5 second"],[0,"s\n  "]],"start1":754,"start2":754,"length1":133,"length2":361},{"diffs":[[0,"use("],[-1,"4"],[1,"5"],[0,"00)\n"]],"start1":1129,"start2":1129,"length1":9,"length2":9},{"diffs":[[0,"ove "],[-1,"For"],[1,"back"],[0,"ward "],[-1,"Again"],[1,"a little"],[0,"\n   "]],"start1":1149,"start2":1149,"length1":21,"length2":25},{"diffs":[[0,"        "],[-1,"# Right wheel for"],[1,"moveBack"],[0,"ward"],[1,"()"],[0,"\n       "]],"start1":1171,"start2":1171,"length1":37,"length2":30},{"diffs":[[0,"    "],[-1,"pins.servo_write_pin(AnalogPin.P1, 0)\n        # Left wheel forward\n        pins.servo_write_pin(AnalogPin.P2, 180)\n    else:\n        # Move Forward Normally\n        # Right wheel forward\n        pins.servo_write_pin(AnalogPin.P1, 0)\n        # Left wheel forward\n        pins.servo_write_pin(AnalogPin.P2, 180"],[1,"# Wait for 0.5 seconds\n        basic.pause(500)\n        # Turn to the right\n        turnRight()\n        # Wait for 0.5 seconds\n        basic.pause(500)\n        # Continue forward\n        moveForward()\n    else:\n        # If no object is detected, move forward\n        moveForward("],[0,")\nba"]],"start1":1198,"start2":1198,"length1":316,"length2":288}]}]},{"timestamp":1742439042938,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"itor\": \""],[-1,"py"],[1,"ts"],[0,"prj\"\n}\n"]],"start1":511,"start2":511,"length1":17,"length2":17}]}]},{"timestamp":1742444729652,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"ion "],[-1,"on_forever() {\n    "],[1,"() {"],[0,"\n   "]],"start1":36,"start2":36,"length1":27,"length2":12},{"diffs":[[0,"ar.ping("],[1,"\n    "],[0,"DigitalP"]],"start1":63,"start2":63,"length1":16,"length2":21},{"diffs":[[0,"lPin.P0,"],[1,"\n   "],[0," Digital"]],"start1":82,"start2":82,"length1":16,"length2":20},{"diffs":[[0,"lPin.P0,"],[1,"\n   "],[0," PingUni"]],"start1":101,"start2":101,"length1":16,"length2":20},{"diffs":[[0,"timeters"],[1,"\n    "],[0,")\n    if"]],"start1":126,"start2":126,"length1":16,"length2":21},{"diffs":[[0,"{\n        //"],[-1," "],[0," Move Backwa"]],"start1":165,"start2":165,"length1":25,"length2":24},{"diffs":[[0,"inch)\n        //"],[-1," "],[0," Right wheel bac"]],"start1":195,"start2":195,"length1":33,"length2":32},{"diffs":[[0," 180)\n        //"],[-1," "],[0," Left wheel back"]],"start1":273,"start2":273,"length1":33,"length2":32},{"diffs":[[0,")\n        //"],[-1," "],[0," Move back f"]],"start1":352,"start2":352,"length1":25,"length2":24},{"diffs":[[0,")\n        //"],[-1," "],[0," Turn Right\n"]],"start1":418,"start2":418,"length1":25,"length2":24},{"diffs":[[0,"Right\n        //"],[-1," "],[0," Right wheel sto"]],"start1":436,"start2":436,"length1":33,"length2":32},{"diffs":[[0," 180)\n        //"],[-1," "],[0," Left wheel forw"]],"start1":510,"start2":510,"length1":33,"length2":32},{"diffs":[[0,"      //"],[-1," "],[0," Turn ri"]],"start1":594,"start2":594,"length1":17,"length2":16},{"diffs":[[0,"(400)\n        //"],[-1," "],[0," Move Forward Ag"]],"start1":643,"start2":643,"length1":33,"length2":32},{"diffs":[[0,"Again\n        //"],[-1," "],[0," Right wheel for"]],"start1":673,"start2":673,"length1":33,"length2":32},{"diffs":[[0,"1, 0)\n        //"],[-1," "],[0," Left wheel forw"]],"start1":748,"start2":748,"length1":33,"length2":32},{"diffs":[[0,"      //"],[-1," "],[0," Move Fo"]],"start1":845,"start2":845,"length1":17,"length2":16},{"diffs":[[0,"      //"],[-1," "],[0," Right w"]],"start1":878,"start2":878,"length1":17,"length2":16},{"diffs":[[0,"      //"],[-1," "],[0," Left wh"]],"start1":953,"start2":953,"length1":17,"length2":16},{"diffs":[[0,"  }\n"],[-1,"    \n"],[0,"})\n"]],"start1":1029,"start2":1029,"length1":12,"length2":7}]}]},{"timestamp":1742444730428,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"ble id=\""],[-1,"|iL%StXAyK4bCi]IEJaR"],[1,"aO?p(_53)k:j(;WLW/wC"],[0,"\">distan"]],"start1":72,"start2":72,"length1":36,"length2":36},{"diffs":[[0," x=\""],[1,"2"],[0,"0\" y=\""],[1,"2"],[0,"0\"><"]],"start1":161,"start2":161,"length1":14,"length2":16},{"diffs":[[0,"AR\" id=\""],[-1,"|iL%StXAyK4bCi]IEJaR"],[1,"aO?p(_53)k:j(;WLW/wC"],[0,"\">distan"]],"start1":244,"start2":244,"length1":36,"length2":36},{"diffs":[[0,"id=\""],[-1,"|iL%StXAyK4bCi]IEJaR"],[1,"aO?p(_53)k:j(;WLW/wC"],[0,"\">di"]],"start1":871,"start2":871,"length1":28,"length2":28}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"ion "],[-1,"() {"],[1,"on_forever() {\n    "],[0,"\n   "]],"start1":36,"start2":36,"length1":12,"length2":27},{"diffs":[[0,"ar.ping("],[-1,"\n    "],[0,"DigitalP"]],"start1":78,"start2":78,"length1":21,"length2":16},{"diffs":[[0,"lPin.P0,"],[-1,"\n   "],[0," Digital"]],"start1":92,"start2":92,"length1":20,"length2":16},{"diffs":[[0,"lPin.P0,"],[-1,"\n   "],[0," PingUni"]],"start1":107,"start2":107,"length1":20,"length2":16},{"diffs":[[0,"timeters"],[-1,"\n    "],[0,")\n    if"]],"start1":128,"start2":128,"length1":21,"length2":16},{"diffs":[[0,"{\n        //"],[1," "],[0," Move Backwa"]],"start1":162,"start2":162,"length1":24,"length2":25},{"diffs":[[0,"inch)\n        //"],[1," "],[0," Right wheel bac"]],"start1":193,"start2":193,"length1":32,"length2":33},{"diffs":[[0," 180)\n        //"],[1," "],[0," Left wheel back"]],"start1":272,"start2":272,"length1":32,"length2":33},{"diffs":[[0,")\n        //"],[1," "],[0," Move back f"]],"start1":352,"start2":352,"length1":24,"length2":25},{"diffs":[[0,")\n        //"],[1," "],[0," Turn Right\n"]],"start1":419,"start2":419,"length1":24,"length2":25},{"diffs":[[0,"Right\n        //"],[1," "],[0," Right wheel sto"]],"start1":438,"start2":438,"length1":32,"length2":33},{"diffs":[[0," 180)\n        //"],[1," "],[0," Left wheel forw"]],"start1":513,"start2":513,"length1":32,"length2":33},{"diffs":[[0,"      //"],[1," "],[0," Turn ri"]],"start1":598,"start2":598,"length1":16,"length2":17},{"diffs":[[0,"(400)\n        //"],[1," "],[0," Move Forward Ag"]],"start1":648,"start2":648,"length1":32,"length2":33},{"diffs":[[0,"Again\n        //"],[1," "],[0," Right wheel for"]],"start1":679,"start2":679,"length1":32,"length2":33},{"diffs":[[0,"1, 0)\n        //"],[1," "],[0," Left wheel forw"]],"start1":755,"start2":755,"length1":32,"length2":33},{"diffs":[[0,"      //"],[1," "],[0," Move Fo"]],"start1":853,"start2":853,"length1":16,"length2":17},{"diffs":[[0,"      //"],[1," "],[0," Right w"]],"start1":887,"start2":887,"length1":16,"length2":17},{"diffs":[[0,"      //"],[1," "],[0," Left wh"]],"start1":963,"start2":963,"length1":16,"length2":17},{"diffs":[[0,")\n    }\n"],[1,"    \n"],[0,"})\n"]],"start1":1036,"start2":1036,"length1":11,"length2":16}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"itor\": \""],[-1,"blocks"],[1,"py"],[0,"prj\"\n}\n"]],"start1":511,"start2":511,"length1":21,"length2":17}]}]},{"timestamp":1742444826536,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"name\": \""],[1,"Ultra"],[0,"sonic Ca"]],"start1":7,"start2":7,"length1":16,"length2":21}]}]},{"timestamp":1742448673551,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,": \"sonic"],[-1,":"],[0," Car Mov"]],"start1":12,"start2":12,"length1":17,"length2":16}]}]},{"timestamp":1742448699580,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"ble id=\""],[-1,"$eiD00fG{TYE!jxNh2zh"],[1,"|iL%StXAyK4bCi]IEJaR"],[0,"\">distan"]],"start1":72,"start2":72,"length1":36,"length2":36},{"diffs":[[0," x=\""],[-1,"2"],[0,"0\" y=\""],[-1,"2"],[0,"0\"><"]],"start1":161,"start2":161,"length1":16,"length2":14},{"diffs":[[0,"AR\" id=\""],[-1,"$eiD00fG{TYE!jxNh2zh"],[1,"|iL%StXAyK4bCi]IEJaR"],[0,"\">distan"]],"start1":242,"start2":242,"length1":36,"length2":36},{"diffs":[[0,"id=\""],[-1,"$eiD00fG{TYE!jxNh2zh"],[1,"|iL%StXAyK4bCi]IEJaR"],[0,"\">di"]],"start1":869,"start2":869,"length1":28,"length2":28}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," \"sonic:"],[-1,"bit"],[0," Car Mov"]],"start1":13,"start2":13,"length1":19,"length2":16}]}]},{"timestamp":1742448749551,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0," <= "],[-1,"5"],[1,"10"],[0,") {\n"]],"start1":157,"start2":157,"length1":9,"length2":10}]}]},{"timestamp":1742449548763,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"UM\">"],[-1,"5"],[1,"10"],[0,"</fi"]],"start1":986,"start2":986,"length1":9,"length2":10}]}]},{"timestamp":1742449548798,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"UM\">"],[-1,"10"],[1,"5"],[0,"</fi"]],"start1":986,"start2":986,"length1":10,"length2":9}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0," <= "],[-1,"10"],[1,"5"],[0,") {\n"]],"start1":157,"start2":157,"length1":10,"length2":9}]}]},{"timestamp":1742450101915,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0," x=\""],[1,"2"],[0,"0\" y=\""],[1,"2"],[0,"0\"><"]],"start1":161,"start2":161,"length1":14,"length2":16}]}]},{"timestamp":1742522348712,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"itor\": \""],[-1,"t"],[1,"block"],[0,"sprj\"\n}\n"]],"start1":510,"start2":510,"length1":17,"length2":21}]}]},{"timestamp":1742522938445,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"ble id=\""],[-1,"#1=AD%@Ig!-Ku0%)B{#%"],[1,"$eiD00fG{TYE!jxNh2zh"],[0,"\">distan"]],"start1":72,"start2":72,"length1":36,"length2":36},{"diffs":[[0,"ver\""],[-1," id=\"WeYqv0-T]P^,8p9zgDE?\""],[0," x=\""],[-1,"2"],[0,"0\" y=\""],[-1,"2"],[0,"0\"><"]],"start1":157,"start2":157,"length1":46,"length2":18},{"diffs":[[0,"set\""],[-1," id=\"Hh$^SSc}cvj$Gf|PaUB1\""],[0,"><fi"]],"start1":223,"start2":223,"length1":34,"length2":8},{"diffs":[[0,"AR\" id=\""],[-1,"#1=AD%@Ig!-Ku0%)B{#%"],[1,"$eiD00fG{TYE!jxNh2zh"],[0,"\">distan"]],"start1":242,"start2":242,"length1":36,"length2":36},{"diffs":[[0,"ber\""],[-1," id=\"l1]#CCW5#U~9Rj|$/gAW\""],[0,"><fi"]],"start1":330,"start2":330,"length1":34,"length2":8},{"diffs":[[0,"ing\""],[-1," id=\"d/Y?(gI}!};OgfRjM~Bw\""],[0,"><fi"]],"start1":391,"start2":391,"length1":34,"length2":8},{"diffs":[[0,"_if\""],[-1," id=\"r)Zx4j_@%hBd1p?5s$YS\""],[0,"><mu"]],"start1":566,"start2":566,"length1":34,"length2":8},{"diffs":[[0,"ean\""],[-1," id=\"OeT6S6Th[f/zAdaCJCC`\""],[0,"><fi"]],"start1":643,"start2":643,"length1":34,"length2":8},{"diffs":[[0,"are\""],[-1," id=\"^M.nl~2V25@P!*cV4+Nh\""],[0,"><fi"]],"start1":711,"start2":711,"length1":34,"length2":8},{"diffs":[[0,"ber\""],[-1," id=\"X+30A=_L4@1]=Z%sv6yE\""],[0,"><fi"]],"start1":782,"start2":782,"length1":34,"length2":8},{"diffs":[[0,"get\""],[-1," id=\";wABsAorKLTu+;ymTeG7\""],[0,"><fi"]],"start1":846,"start2":846,"length1":34,"length2":8},{"diffs":[[0,"id=\""],[-1,"#1=AD%@Ig!-Ku0%)B{#%"],[1,"$eiD00fG{TYE!jxNh2zh"],[0,"\">di"]],"start1":869,"start2":869,"length1":28,"length2":28},{"diffs":[[0,"ber\""],[-1," id=\"T`+oLWfc^U]{(:rRZlP{\""],[0,"><fi"]],"start1":965,"start2":965,"length1":34,"length2":8},{"diffs":[[0,"pin\""],[-1," id=\"(+R{L:(]=gg_UCO(6J?*\""],[0,"><co"]],"start1":1083,"start2":1083,"length1":34,"length2":8},{"diffs":[[0,"dow\""],[-1," id=\"i((Sf9s/^nTZ5uU5yr7/\""],[0,"><fi"]],"start1":1227,"start2":1227,"length1":34,"length2":8},{"diffs":[[0,"max\""],[-1," id=\"*hZ=6Wty!0KUHi,Bz,h*\""],[0,"><mu"]],"start1":1336,"start2":1336,"length1":34,"length2":8},{"diffs":[[0,"pin\""],[-1," id=\"kv@GK,$Y-{4J:JUz!6D#\""],[0,"><co"]],"start1":1479,"start2":1479,"length1":34,"length2":8},{"diffs":[[0,"dow\""],[-1," id=\"^YQl5BXh@BXO%5(nR@Iq\""],[0,"><fi"]],"start1":1599,"start2":1599,"length1":34,"length2":8},{"diffs":[[0,"max\""],[-1," id=\"3sNUT~CRO~rijN2ZABtm\""],[0,"><mu"]],"start1":1708,"start2":1708,"length1":34,"length2":8},{"diffs":[[0,"use\""],[-1," id=\"/`l69%LYn#AqY84Wgm}6\""],[0,"><co"]],"start1":1841,"start2":1841,"length1":34,"length2":8},{"diffs":[[0,"ker\""],[-1," id=\",%}_1]c%)d8lNIGR(oke\""],[0,"><fi"]],"start1":1965,"start2":1965,"length1":34,"length2":8},{"diffs":[[0,"pin\""],[-1," id=\"@WX.^hC{N[-8.72FG~NE\""],[0,"><co"]],"start1":2051,"start2":2051,"length1":34,"length2":8},{"diffs":[[0,"dow\""],[-1," id=\":2b(FQx*UFv]r1Q/w%^d\""],[0,"><fi"]],"start1":2179,"start2":2179,"length1":34,"length2":8},{"diffs":[[0,"max\""],[-1," id=\"c$T+dkXSUlnpNnj/L:K(\""],[0,"><mu"]],"start1":2288,"start2":2288,"length1":34,"length2":8},{"diffs":[[0,"pin\""],[-1," id=\"o)49G*)lD~LXB+=Y2e[_\""],[0,"><co"]],"start1":2431,"start2":2431,"length1":34,"length2":8},{"diffs":[[0,"dow\""],[-1," id=\"V(FdV8RM0UYK/5BR#MnE\""],[0,"><fi"]],"start1":2550,"start2":2550,"length1":34,"length2":8},{"diffs":[[0,"max\""],[-1," id=\"[ZEOrS8n43pv3@TBol)V\""],[0,"><mu"]],"start1":2659,"start2":2659,"length1":34,"length2":8},{"diffs":[[0,"use\""],[-1," id=\"XAzmm1@gk~_.{Nt._2}^\""],[0,"><co"]],"start1":2794,"start2":2794,"length1":34,"length2":8},{"diffs":[[0,"ker\""],[-1," id=\"O9?.5NxDxwA{LH.;wj*x\""],[0,"><fi"]],"start1":2909,"start2":2909,"length1":34,"length2":8},{"diffs":[[0,"pin\""],[-1," id=\"W4eUV|OrEBgQZ+6Ro!@v\""],[0,"><co"]],"start1":2995,"start2":2995,"length1":34,"length2":8},{"diffs":[[0,"dow\""],[-1," id=\"q1nr`!K?z)#tK%7sMtk)\""],[0,"><fi"]],"start1":3134,"start2":3134,"length1":34,"length2":8},{"diffs":[[0,"max\""],[-1," id=\"+0{$_4YWh-|NP416mUfY\""],[0,"><mu"]],"start1":3243,"start2":3243,"length1":34,"length2":8},{"diffs":[[0,"pin\""],[-1," id=\"WgcyfR^=tp0/6YTu}d}J\""],[0,"><co"]],"start1":3384,"start2":3384,"length1":34,"length2":8},{"diffs":[[0,"dow\""],[-1," id=\"WM.29|aGOv|rR7L?q?al\""],[0,"><fi"]],"start1":3503,"start2":3503,"length1":34,"length2":8},{"diffs":[[0,"max\""],[-1," id=\"P#@;#|GgKP4mmYtpQJGZ\""],[0,"><mu"]],"start1":3612,"start2":3612,"length1":34,"length2":8},{"diffs":[[0,"pin\""],[-1," id=\"L57+37%!|Imi*r|V!VEW\""],[0,"><co"]],"start1":3897,"start2":3897,"length1":34,"length2":8},{"diffs":[[0,"dow\""],[-1," id=\"D3qs@m#HFp@~hGFe;E7@\""],[0,"><fi"]],"start1":4039,"start2":4039,"length1":34,"length2":8},{"diffs":[[0,"max\""],[-1," id=\"RZz-)Fi1`8Pv6?M2L{}{\""],[0,"><mu"]],"start1":4148,"start2":4148,"length1":34,"length2":8},{"diffs":[[0,"pin\""],[-1," id=\".rh@g|6ChV2#0i^clkv}\""],[0,"><co"]],"start1":4289,"start2":4289,"length1":34,"length2":8},{"diffs":[[0,"dow\""],[-1," id=\"m^ppn$o.[arMItP!#9oz\""],[0,"><fi"]],"start1":4408,"start2":4408,"length1":34,"length2":8},{"diffs":[[0,"max\""],[-1," id=\"oE9*mTPwz:0L*E1axwJJ\""],[0,"><mu"]],"start1":4517,"start2":4517,"length1":34,"length2":8}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," ],\n"],[-1,"    \"testFiles\": [\n        \"test.ts\"\n    ],\n"],[0,"    "]],"start1":490,"start2":490,"length1":52,"length2":8},{"diffs":[[0,"itor\": \""],[-1,"block"],[1,"t"],[0,"sprj\"\n}\n"]],"start1":510,"start2":510,"length1":21,"length2":17}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"}]}],"snapshots":[{"timestamp":1742379271598,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"Ultrasonic Car Movement\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}},{"timestamp":1742381123503,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"0\" y=\"0\"></block><block type=\"device_forever\" x=\"205\" y=\"0\"></block></xml>","main.ts":"","README.md":"","main.py":"\nlet distan\nlet leftServo = pins.P1\nlet rightServo = pins.P2\n\n// Function to move the car forward\nfunction moveForward() {\n    pins.servoWritePin(leftServo, 180) // Left servo forward\n    pins.servoWritePin(rightServo, 0)  // Right servo forward\n}\n\n// Function to move the car backward\nfunction moveBackward() {\n    pins.servoWritePin(leftServo, 0)   // Left servo backward\n    pins.servoWritePin(rightServo, 180) // Right servo backward\n}\n\n// Function to turn the car to the right\nfunction turnRight() {\n    pins.servoWritePin(leftServo, 180) // Left servo forward\n    pins.servoWritePin(rightServo, 180) // Right servo backward\n}\n\n// Function to stop the car\nfunction stopCar() {\n    pins.servoWritePin(leftServo, 90) // Neutral position\n    pins.servoWritePin(rightServo, 90) // Neutral position\n}\n\n// Main loop\nbasic.forever(function () {\n    // Measure distance using the ultrasonic sensor\n    distance = sonar.ping(\n        DigitalPin.P8, // Trigger pin\n        DigitalPin.P9, // Echo pin\n        PingUnit.Centimeters // Distance unit\n    )\n\n    // If an object is detected within 10 cm\n    if (distance < 10 && distance > 0) {\n        // Stop the car\n        stopCar()\n        basic.pause(500) // Wait for 0.5 seconds\n\n        // Move backward a little\n        moveBackward()\n        basic.pause(500) // Wait for 0.5 seconds\n\n        // Turn to the right\n        turnRight()\n        basic.pause(500) // Wait for 0.5 seconds\n\n        // Continue forward\n        moveForward()\n    } else {\n        // If no object is detected, move forward\n        moveForward()\n    }\n})","pxt.json":"{\n    \"name\": \"Ultrasonic Car Movement\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"servo\": \"*\",\n        \"MakerBit-Ultrasonic\": \"github:1010technologies/pxt-makerbit-ultrasonic#v1.0.8\",\n        \"pxt-sonar\": \"github:microsoft/pxt-sonar#v0.0.6\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"pyprj\"\n}\n"}},{"timestamp":1742436895306,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"y6C01tJMAxN/Tt|taKAN\">distance</variable></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"><statement name=\"HANDLER\"><block type=\"typescript_statement\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" line0=\"let distance = 0\" numlines=\"1\" declaredvars=\"distance\"></mutation><next><block type=\"typescript_statement\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" line0=\"function measureDistance(triggerPin: DigitalPin, echoPin: DigitalPin): number {\" line1=\"    // Send a short pulse to the trigger pin\" line2=\"    pins.digitalWritePin(triggerPin, 0)\" line3=\"    control.waitMicros(2)\" line4=\"    pins.digitalWritePin(triggerPin, 1)\" line5=\"    control.waitMicros(10)\" line6=\"    pins.digitalWritePin(triggerPin, 0)\" line7=\"\" line8=\"    // Measure the duration of the echo pulse\" line9=\"    const duration = pins.pulseIn(echoPin, PulseValue.High)\" line10=\"\" line11=\"    // Calculate distance in centimeters\" line12=\"    distance = duration / 58\" line13=\"    return distance\" line14=\"}\" numlines=\"15\"></mutation></block></next></block></statement></block><block type=\"device_forever\" x=\"792\" y=\"20\"><comment pinned=\"false\" h=\"80\" w=\"160\">Main loop</comment><statement name=\"HANDLER\"><block type=\"typescript_statement\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" line0=\"distance = measureDistance(DigitalPin.P0, DigitalPin.P1)\" numlines=\"1\"></mutation><next><block type=\"controls_if\"><mutation else=\"1\"></mutation><comment pinned=\"false\" h=\"80\" w=\"160\">If an object is detected within 10 cm</comment><value name=\"IF0\"><shadow type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_operation\"><field name=\"OP\">AND</field><value name=\"A\"><shadow type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\"><field name=\"OP\">LT</field><value name=\"A\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"y6C01tJMAxN/Tt|taKAN\">distance</field></block></value><value name=\"B\"><shadow type=\"math_number\"><field name=\"NUM\">10</field></shadow></value></block></value><value name=\"B\"><shadow type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\"><field name=\"OP\">GT</field><value name=\"A\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"y6C01tJMAxN/Tt|taKAN\">distance</field></block></value><value name=\"B\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow></value></block></value></block></value><statement name=\"DO0\"><block type=\"function_call\"><mutation name=\"stopCar\" functionid=\"T-NtR(6gjq7Y;_L_0k_k\"></mutation><comment pinned=\"false\" h=\"80\" w=\"160\">Stop the car</comment><next><block type=\"device_pause\"><comment pinned=\"false\" h=\"80\" w=\"160\">Wait for 0.5 seconds</comment><value name=\"pause\"><shadow type=\"timePicker\"><field name=\"ms\">500</field></shadow></value><next><block type=\"function_call\"><mutation name=\"moveBackward\" functionid=\"-eYAT@|L(m#fWuyo{*41\"></mutation><comment pinned=\"false\" h=\"80\" w=\"160\">Move backward a little</comment><next><block type=\"device_pause\"><comment pinned=\"false\" h=\"80\" w=\"160\">Wait for 0.5 seconds</comment><value name=\"pause\"><shadow type=\"timePicker\"><field name=\"ms\">500</field></shadow></value><next><block type=\"function_call\"><mutation name=\"turnRight\" functionid=\"5;IoD-OC7K]H_g^_x1Dt\"></mutation><comment pinned=\"false\" h=\"80\" w=\"160\">Turn to the right</comment><next><block type=\"device_pause\"><comment pinned=\"false\" h=\"80\" w=\"160\">Wait for 0.5 seconds</comment><value name=\"pause\"><shadow type=\"timePicker\"><field name=\"ms\">500</field></shadow></value><next><block type=\"function_call\"><mutation name=\"moveForward\" functionid=\"x-kd(3LLjWcSYS,9l,Ps\"></mutation><comment pinned=\"false\" h=\"80\" w=\"160\">Continue forward</comment></block></next></block></next></block></next></block></next></block></next></block></next></block></statement><statement name=\"ELSE\"><block type=\"function_call\"><mutation name=\"moveForward\" functionid=\"x-kd(3LLjWcSYS,9l,Ps\"></mutation><comment pinned=\"false\" h=\"80\" w=\"160\">If no object is detected, move forward</comment></block></statement></block></next></block></statement></block><block type=\"function_definition\" x=\"1585\" y=\"20\"><mutation name=\"moveForward\" functionid=\"x-kd(3LLjWcSYS,9l,Ps\"></mutation><field name=\"function_name\">moveForward</field><comment pinned=\"false\" h=\"80\" w=\"160\">Function to move the car forward</comment><statement name=\"STACK\"><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Left servo forward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P0</field></shadow><block type=\"digital_pin\"><field name=\"pin\">DigitalPin.P1</field></block></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">180</field></shadow></value><next><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Right servo forward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P0</field></shadow><block type=\"digital_pin\"><field name=\"pin\">DigitalPin.P2</field></block></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">0</field></shadow></value></block></next></block></statement></block><block type=\"function_definition\" x=\"20\" y=\"801\"><mutation name=\"moveBackward\" functionid=\"-eYAT@|L(m#fWuyo{*41\"></mutation><field name=\"function_name\">moveBackward</field><comment pinned=\"false\" h=\"80\" w=\"160\">Function to move the car backward</comment><statement name=\"STACK\"><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Left servo backward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P0</field></shadow><block type=\"digital_pin\"><field name=\"pin\">DigitalPin.P1</field></block></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">0</field></shadow></value><next><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Right servo backward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P0</field></shadow><block type=\"digital_pin\"><field name=\"pin\">DigitalPin.P2</field></block></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">180</field></shadow></value></block></next></block></statement></block><block type=\"function_definition\" x=\"528\" y=\"801\"><mutation name=\"turnRight\" functionid=\"5;IoD-OC7K]H_g^_x1Dt\"></mutation><field name=\"function_name\">turnRight</field><comment pinned=\"false\" h=\"80\" w=\"160\">Function to turn the car to the right</comment><statement name=\"STACK\"><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Left servo forward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P0</field></shadow><block type=\"digital_pin\"><field name=\"pin\">DigitalPin.P1</field></block></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">180</field></shadow></value><next><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Right servo backward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P0</field></shadow><block type=\"digital_pin\"><field name=\"pin\">DigitalPin.P2</field></block></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">180</field></shadow></value></block></next></block></statement></block><block type=\"function_definition\" x=\"1035\" y=\"801\"><mutation name=\"stopCar\" functionid=\"T-NtR(6gjq7Y;_L_0k_k\"></mutation><field name=\"function_name\">stopCar</field><comment pinned=\"false\" h=\"80\" w=\"160\">Function to stop the car</comment><statement name=\"STACK\"><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Neutral position</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P0</field></shadow><block type=\"digital_pin\"><field name=\"pin\">DigitalPin.P1</field></block></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">90</field></shadow></value><next><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Neutral position</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P0</field></shadow><block type=\"digital_pin\"><field name=\"pin\">DigitalPin.P2</field></block></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">90</field></shadow></value></block></next></block></statement></block></xml>","main.ts":"","README.md":"","main.py":"distance = 0\n# Function to stop the car\ndef stopCar():\n    # Neutral position\n    pins.servo_write_pin(DigitalPin.P1, 90)\n    # Neutral position\n    pins.servo_write_pin(DigitalPin.P2, 90)\n# Function to move the car forward\ndef moveForward():\n    # Left servo forward\n    pins.servo_write_pin(DigitalPin.P1, 180)\n    # Right servo forward\n    pins.servo_write_pin(DigitalPin.P2, 0)\n# Function to turn the car to the right\ndef turnRight():\n    # Left servo forward\n    pins.servo_write_pin(DigitalPin.P1, 180)\n    # Right servo backward\n    pins.servo_write_pin(DigitalPin.P2, 180)\n# Function to move the car backward\ndef moveBackward():\n    # Left servo backward\n    pins.servo_write_pin(DigitalPin.P1, 0)\n    # Right servo backward\n    pins.servo_write_pin(DigitalPin.P2, 180)\n# Main loop\n\ndef on_forever():\n    global distance\n    # Measure distance using the ultrasonic sensor\n    distance = sonar.ping(DigitalPin.P8, DigitalPin.P9, PingUnit.CENTIMETERS)\n    # If an object is detected within 10 cm\n    if distance < 10 and distance > 0:\n        # Stop the car\n        stopCar()\n        # Wait for 0.5 seconds\n        basic.pause(500)\n        # Move backward a little\n        moveBackward()\n        # Wait for 0.5 seconds\n        basic.pause(500)\n        # Turn to the right\n        turnRight()\n        # Wait for 0.5 seconds\n        basic.pause(500)\n        # Continue forward\n        moveForward()\n    else:\n        # If no object is detected, move forward\n        moveForward()\nbasic.forever(on_forever)\n","pxt.json":"{\n    \"name\": \"Ultrasonic Car Movement\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"servo\": \"*\",\n        \"MakerBit-Ultrasonic\": \"github:1010technologies/pxt-makerbit-ultrasonic#v1.0.8\",\n        \"pxt-sonar\": \"github:microsoft/pxt-sonar#v0.0.6\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"blocksprj\"\n}\n"}},{"timestamp":1742438987649,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"HkJ+-v,R!|G+t:j!V.l;\">distance</variable></variables><block type=\"device_forever\" x=\"0\" y=\"0\"><statement name=\"HANDLER\"><block type=\"variables_set\"><field name=\"VAR\" id=\"HkJ+-v,R!|G+t:j!V.l;\">distance</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"sonar_ping\"><field name=\"trig\">DigitalPin.P0</field><field name=\"echo\">DigitalPin.P0</field><field name=\"unit\">PingUnit.Centimeters</field></block></value><next><block type=\"controls_if\"><mutation else=\"1\"></mutation><value name=\"IF0\"><shadow type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\"><field name=\"OP\">LTE</field><value name=\"A\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"HkJ+-v,R!|G+t:j!V.l;\">distance</field></block></value><value name=\"B\"><shadow type=\"math_number\"><field name=\"NUM\">10</field></shadow></value></block></value><statement name=\"DO0\"><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Move Backward (1 inch)\nRight wheel backward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P1</field></shadow></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">180</field></shadow></value><next><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Left wheel backward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P2</field></shadow></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">0</field></shadow></value><next><block type=\"device_pause\"><comment pinned=\"false\" h=\"80\" w=\"160\">Move back for 300ms (~1 inch)</comment><value name=\"pause\"><shadow type=\"timePicker\"><field name=\"ms\">300</field></shadow></value><next><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Turn Right\nRight wheel stop</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P1</field></shadow></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">180</field></shadow></value><next><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Left wheel forward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P2</field></shadow></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">180</field></shadow></value><next><block type=\"device_pause\"><comment pinned=\"false\" h=\"80\" w=\"160\">Turn right for 400ms</comment><value name=\"pause\"><shadow type=\"timePicker\"><field name=\"ms\">400</field></shadow></value><next><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Move Forward Again\nRight wheel forward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P1</field></shadow></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">0</field></shadow></value><next><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Left wheel forward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P2</field></shadow></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">180</field></shadow></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement><statement name=\"ELSE\"><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Move Forward Normally\nRight wheel forward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P1</field></shadow></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">0</field></shadow></value><next><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Left wheel forward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P2</field></shadow></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">180</field></shadow></value></block></next></block></statement></block></next></block></statement></block></xml>","main.ts":"","README.md":"","main.py":"distance = 0\n# Function to stop the car\ndef stopCar():\n    # Neutral position\n    pins.servo_write_pin(DigitalPin.P1, 90)\n    # Neutral position\n    pins.servo_write_pin(DigitalPin.P2, 90)\n# Function to move the car forward\ndef moveForward():\n    # Left servo forward\n    pins.servo_write_pin(DigitalPin.P1, 180)\n    # Right servo forward\n    pins.servo_write_pin(DigitalPin.P2, 0)\n# Function to turn the car to the right\ndef turnRight():\n    # Left servo forward\n    pins.servo_write_pin(DigitalPin.P1, 180)\n    # Right servo backward\n    pins.servo_write_pin(DigitalPin.P2, 180)\n# Function to move the car backward\ndef moveBackward():\n    # Left servo backward\n    pins.servo_write_pin(DigitalPin.P1, 0)\n    # Right servo backward\n    pins.servo_write_pin(DigitalPin.P2, 180)\n# Main loop\n\ndef on_forever():\n    global distance\n    # Measure distance using the ultrasonic sensor\n    distance = sonar.ping(DigitalPin.P8, DigitalPin.P9, PingUnit.CENTIMETERS)\n    # If an object is detected within 10 cm\n    if distance < 10 and distance > 0:\n        # Stop the car\n        stopCar()\n        # Wait for 0.5 seconds\n        basic.pause(500)\n        # Move backward a little\n        moveBackward()\n        # Wait for 0.5 seconds\n        basic.pause(500)\n        # Turn to the right\n        turnRight()\n        # Wait for 0.5 seconds\n        basic.pause(500)\n        # Continue forward\n        moveForward()\n    else:\n        # If no object is detected, move forward\n        moveForward()\nbasic.forever(on_forever)\n","pxt.json":"{\n    \"name\": \"Ultrasonic Car Movement\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"servo\": \"*\",\n        \"MakerBit-Ultrasonic\": \"github:1010technologies/pxt-makerbit-ultrasonic#v1.0.8\",\n        \"pxt-sonar\": \"github:microsoft/pxt-sonar#v0.0.6\",\n        \"sonarbit\": \"github:elecfreaks/pxt-sonarbit#v1.0.9\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"blocksprj\"\n}\n"}},{"timestamp":1742444729652,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"aO?p(_53)k:j(;WLW/wC\">distance</variable></variables><block type=\"device_forever\" x=\"20\" y=\"20\"><statement name=\"HANDLER\"><block type=\"variables_set\"><field name=\"VAR\" id=\"aO?p(_53)k:j(;WLW/wC\">distance</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"sonar_ping\"><field name=\"trig\">DigitalPin.P0</field><field name=\"echo\">DigitalPin.P0</field><field name=\"unit\">PingUnit.Centimeters</field></block></value><next><block type=\"controls_if\"><mutation else=\"1\"></mutation><value name=\"IF0\"><shadow type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\"><field name=\"OP\">LTE</field><value name=\"A\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"aO?p(_53)k:j(;WLW/wC\">distance</field></block></value><value name=\"B\"><shadow type=\"math_number\"><field name=\"NUM\">10</field></shadow></value></block></value><statement name=\"DO0\"><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Move Backward (1 inch)\nRight wheel backward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P1</field></shadow></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">180</field></shadow></value><next><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Left wheel backward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P2</field></shadow></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">0</field></shadow></value><next><block type=\"device_pause\"><comment pinned=\"false\" h=\"80\" w=\"160\">Move back for 300ms (~1 inch)</comment><value name=\"pause\"><shadow type=\"timePicker\"><field name=\"ms\">300</field></shadow></value><next><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Turn Right\nRight wheel stop</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P1</field></shadow></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">180</field></shadow></value><next><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Left wheel forward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P2</field></shadow></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">180</field></shadow></value><next><block type=\"device_pause\"><comment pinned=\"false\" h=\"80\" w=\"160\">Turn right for 400ms</comment><value name=\"pause\"><shadow type=\"timePicker\"><field name=\"ms\">400</field></shadow></value><next><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Move Forward Again\nRight wheel forward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P1</field></shadow></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">0</field></shadow></value><next><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Left wheel forward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P2</field></shadow></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">180</field></shadow></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement><statement name=\"ELSE\"><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Move Forward Normally\nRight wheel forward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P1</field></shadow></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">0</field></shadow></value><next><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Left wheel forward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P2</field></shadow></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">180</field></shadow></value></block></next></block></statement></block></next></block></statement></block></xml>","main.ts":"let distance = 0\nbasic.forever(function () {\n    distance = sonar.ping(\n    DigitalPin.P0,\n    DigitalPin.P0,\n    PingUnit.Centimeters\n    )\n    if (distance <= 10) {\n        // Move Backward (1 inch)\n        // Right wheel backward\n        pins.servoWritePin(AnalogPin.P1, 180)\n        // Left wheel backward\n        pins.servoWritePin(AnalogPin.P2, 0)\n        // Move back for 300ms (~1 inch)\n        basic.pause(300)\n        // Turn Right\n        // Right wheel stop\n        pins.servoWritePin(AnalogPin.P1, 180)\n        // Left wheel forward\n        pins.servoWritePin(AnalogPin.P2, 180)\n        // Turn right for 400ms\n        basic.pause(400)\n        // Move Forward Again\n        // Right wheel forward\n        pins.servoWritePin(AnalogPin.P1, 0)\n        // Left wheel forward\n        pins.servoWritePin(AnalogPin.P2, 180)\n    } else {\n        // Move Forward Normally\n        // Right wheel forward\n        pins.servoWritePin(AnalogPin.P1, 0)\n        // Left wheel forward\n        pins.servoWritePin(AnalogPin.P2, 180)\n    }\n})\n","README.md":"","main.py":"distance = 0\n\ndef on_forever():\n    global distance\n    distance = sonar.ping(DigitalPin.P0, DigitalPin.P0, PingUnit.CENTIMETERS)\n    if distance <= 10:\n        # Move Backward (1 inch)\n        # Right wheel backward\n        pins.servo_write_pin(AnalogPin.P1, 180)\n        # Left wheel backward\n        pins.servo_write_pin(AnalogPin.P2, 0)\n        # Move back for 300ms (~1 inch)\n        basic.pause(300)\n        # Turn Right\n        # Right wheel stop\n        pins.servo_write_pin(AnalogPin.P1, 180)\n        # Left wheel forward\n        pins.servo_write_pin(AnalogPin.P2, 180)\n        # Turn right for 400ms\n        basic.pause(400)\n        # Move Forward Again\n        # Right wheel forward\n        pins.servo_write_pin(AnalogPin.P1, 0)\n        # Left wheel forward\n        pins.servo_write_pin(AnalogPin.P2, 180)\n    else:\n        # Move Forward Normally\n        # Right wheel forward\n        pins.servo_write_pin(AnalogPin.P1, 0)\n        # Left wheel forward\n        pins.servo_write_pin(AnalogPin.P2, 180)\nbasic.forever(on_forever)\n","pxt.json":"{\n    \"name\": \"Ultrasonic Car Movement\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"servo\": \"*\",\n        \"MakerBit-Ultrasonic\": \"github:1010technologies/pxt-makerbit-ultrasonic#v1.0.8\",\n        \"pxt-sonar\": \"github:microsoft/pxt-sonar#v0.0.6\",\n        \"sonarbit\": \"github:elecfreaks/pxt-sonarbit#v1.0.9\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}},{"timestamp":1742448673551,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"|iL%StXAyK4bCi]IEJaR\">distance</variable></variables><block type=\"device_forever\" x=\"0\" y=\"0\"><statement name=\"HANDLER\"><block type=\"variables_set\"><field name=\"VAR\" id=\"|iL%StXAyK4bCi]IEJaR\">distance</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"sonar_ping\"><field name=\"trig\">DigitalPin.P0</field><field name=\"echo\">DigitalPin.P0</field><field name=\"unit\">PingUnit.Centimeters</field></block></value><next><block type=\"controls_if\"><mutation else=\"1\"></mutation><value name=\"IF0\"><shadow type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\"><field name=\"OP\">LTE</field><value name=\"A\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"|iL%StXAyK4bCi]IEJaR\">distance</field></block></value><value name=\"B\"><shadow type=\"math_number\"><field name=\"NUM\">10</field></shadow></value></block></value><statement name=\"DO0\"><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Move Backward (1 inch)\nRight wheel backward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P1</field></shadow></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">180</field></shadow></value><next><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Left wheel backward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P2</field></shadow></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">0</field></shadow></value><next><block type=\"device_pause\"><comment pinned=\"false\" h=\"80\" w=\"160\">Move back for 300ms (~1 inch)</comment><value name=\"pause\"><shadow type=\"timePicker\"><field name=\"ms\">300</field></shadow></value><next><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Turn Right\nRight wheel stop</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P1</field></shadow></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">180</field></shadow></value><next><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Left wheel forward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P2</field></shadow></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">180</field></shadow></value><next><block type=\"device_pause\"><comment pinned=\"false\" h=\"80\" w=\"160\">Turn right for 400ms</comment><value name=\"pause\"><shadow type=\"timePicker\"><field name=\"ms\">400</field></shadow></value><next><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Move Forward Again\nRight wheel forward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P1</field></shadow></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">0</field></shadow></value><next><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Left wheel forward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P2</field></shadow></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">180</field></shadow></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement><statement name=\"ELSE\"><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Move Forward Normally\nRight wheel forward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P1</field></shadow></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">0</field></shadow></value><next><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Left wheel forward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P2</field></shadow></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">180</field></shadow></value></block></next></block></statement></block></next></block></statement></block></xml>","main.ts":"","README.md":"","main.py":"distance = 0\n\ndef on_forever():\n    global distance\n    distance = sonar.ping(DigitalPin.P0, DigitalPin.P0, PingUnit.CENTIMETERS)\n    if distance <= 10:\n        # Move Backward (1 inch)\n        # Right wheel backward\n        pins.servo_write_pin(AnalogPin.P1, 180)\n        # Left wheel backward\n        pins.servo_write_pin(AnalogPin.P2, 0)\n        # Move back for 300ms (~1 inch)\n        basic.pause(300)\n        # Turn Right\n        # Right wheel stop\n        pins.servo_write_pin(AnalogPin.P1, 180)\n        # Left wheel forward\n        pins.servo_write_pin(AnalogPin.P2, 180)\n        # Turn right for 400ms\n        basic.pause(400)\n        # Move Forward Again\n        # Right wheel forward\n        pins.servo_write_pin(AnalogPin.P1, 0)\n        # Left wheel forward\n        pins.servo_write_pin(AnalogPin.P2, 180)\n    else:\n        # Move Forward Normally\n        # Right wheel forward\n        pins.servo_write_pin(AnalogPin.P1, 0)\n        # Left wheel forward\n        pins.servo_write_pin(AnalogPin.P2, 180)\nbasic.forever(on_forever)\n","pxt.json":"{\n    \"name\": \"Ultrasonic Car Movement\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"servo\": \"*\",\n        \"MakerBit-Ultrasonic\": \"github:1010technologies/pxt-makerbit-ultrasonic#v1.0.8\",\n        \"pxt-sonar\": \"github:microsoft/pxt-sonar#v0.0.6\",\n        \"sonarbit\": \"github:elecfreaks/pxt-sonarbit#v1.0.9\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"blocksprj\"\n}\n"}},{"timestamp":1742522348712,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"$eiD00fG{TYE!jxNh2zh\">distance</variable></variables><block type=\"device_forever\" x=\"20\" y=\"20\"><statement name=\"HANDLER\"><block type=\"variables_set\"><field name=\"VAR\" id=\"$eiD00fG{TYE!jxNh2zh\">distance</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"sonar_ping\"><field name=\"trig\">DigitalPin.P0</field><field name=\"echo\">DigitalPin.P0</field><field name=\"unit\">PingUnit.Centimeters</field></block></value><next><block type=\"controls_if\"><mutation else=\"1\"></mutation><value name=\"IF0\"><shadow type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\"><field name=\"OP\">LTE</field><value name=\"A\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"$eiD00fG{TYE!jxNh2zh\">distance</field></block></value><value name=\"B\"><shadow type=\"math_number\"><field name=\"NUM\">10</field></shadow></value></block></value><statement name=\"DO0\"><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Move Backward (1 inch)\nRight wheel backward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P1</field></shadow></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">180</field></shadow></value><next><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Left wheel backward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P2</field></shadow></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">0</field></shadow></value><next><block type=\"device_pause\"><comment pinned=\"false\" h=\"80\" w=\"160\">Move back for 300ms (~1 inch)</comment><value name=\"pause\"><shadow type=\"timePicker\"><field name=\"ms\">300</field></shadow></value><next><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Turn Right\nRight wheel stop</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P1</field></shadow></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">180</field></shadow></value><next><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Left wheel forward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P2</field></shadow></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">180</field></shadow></value><next><block type=\"device_pause\"><comment pinned=\"false\" h=\"80\" w=\"160\">Turn right for 400ms</comment><value name=\"pause\"><shadow type=\"timePicker\"><field name=\"ms\">400</field></shadow></value><next><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Move Forward Again\nRight wheel forward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P1</field></shadow></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">0</field></shadow></value><next><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Left wheel forward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P2</field></shadow></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">180</field></shadow></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement><statement name=\"ELSE\"><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Move Forward Normally\nRight wheel forward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P1</field></shadow></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">0</field></shadow></value><next><block type=\"device_set_servo_pin\"><comment pinned=\"false\" h=\"80\" w=\"160\">Left wheel forward</comment><value name=\"name\"><shadow type=\"analog_pin_shadow\"><field name=\"pin\">AnalogPin.P2</field></shadow></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"180\" precision=\"0\"></mutation><field name=\"SLIDER\">180</field></shadow></value></block></next></block></statement></block></next></block></statement></block></xml>","main.ts":"","README.md":"","main.py":"distance = 0\n\ndef on_forever():\n    global distance\n    distance = sonar.ping(DigitalPin.P0, DigitalPin.P0, PingUnit.CENTIMETERS)\n    if distance <= 10:\n        # Move Backward (1 inch)\n        # Right wheel backward\n        pins.servo_write_pin(AnalogPin.P1, 180)\n        # Left wheel backward\n        pins.servo_write_pin(AnalogPin.P2, 0)\n        # Move back for 300ms (~1 inch)\n        basic.pause(300)\n        # Turn Right\n        # Right wheel stop\n        pins.servo_write_pin(AnalogPin.P1, 180)\n        # Left wheel forward\n        pins.servo_write_pin(AnalogPin.P2, 180)\n        # Turn right for 400ms\n        basic.pause(400)\n        # Move Forward Again\n        # Right wheel forward\n        pins.servo_write_pin(AnalogPin.P1, 0)\n        # Left wheel forward\n        pins.servo_write_pin(AnalogPin.P2, 180)\n    else:\n        # Move Forward Normally\n        # Right wheel forward\n        pins.servo_write_pin(AnalogPin.P1, 0)\n        # Left wheel forward\n        pins.servo_write_pin(AnalogPin.P2, 180)\nbasic.forever(on_forever)\n","pxt.json":"{\n    \"name\": \"sonic:bit Car Movement\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"servo\": \"*\",\n        \"MakerBit-Ultrasonic\": \"github:1010technologies/pxt-makerbit-ultrasonic#v1.0.8\",\n        \"pxt-sonar\": \"github:microsoft/pxt-sonar#v0.0.6\",\n        \"sonarbit\": \"github:elecfreaks/pxt-sonarbit#v1.0.9\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"blocksprj\"\n}\n"}}],"shares":[],"lastSaveTime":1742523152925}